{"version":3,"sources":["components/atoms/NavLink.js","components/atoms/LinkButton.js","components/organisms/Header.js","firebase.js","hooks/use-lists.js","components/molecules/BlogCard.js","components/pages/Blogs.js","hooks/use-database.js","hooks/use-blog.js","components/molecules/TableOfContent.js","components/molecules/SectionHeader.js","components/pages/Blog.js","components/organisms/Form.js","initial-data/form-structure-templates.js","components/page-sections/dashboard/UserDataSection.js","hooks/use-article.js","functions/convertTitleIntoLink.js","components/page-sections/dashboard/BlogEditionSection.js","components/page-sections/dashboard/UserBlogsSection.js","components/pages/Dashboard.js","components/molecules/BloggerCard.js","components/pages/Bloggers.js","components/pages/CreateBlog.js","components/page-sections/create-article/MarkdownEditor.js","components/pages/CreateArticle.js","components/atoms/FooterLink.js","components/organisms/Footer.js","hooks/use-blogger.js","components/pages/Blogger.js","components/pages/Article.js","components/pages/SignIn.js","components/pages/SignUp.js","components/pages/About.js","components/pages/UpdateArticle.js","App.js","reportWebVitals.js","index.js"],"names":["NavLink","to","onClick","text","className","LinkButton","style","isCollapsed","type","NAVLINKS","PUBLIC_LINK_BUTTONS","PRIVATE_LINK_BUTTONS","Header","userFirstName","userLastName","logOut","useState","isNavCollapsed","setIsNavCollapsed","handleNavCollapse","id","map","navLink","i","textDecoration","btn","app","getApp","e","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseAuth","getAuth","database","getDatabase","ListsContext","createContext","useLists","useContext","ListsProvider","children","usersListOrderedByUserName","setUsersListOrderedByUserName","usersListOrderedByKeys","setUsersListOrderedByKeys","blogsListOrderedByKeys","setBlogsListOrderedByKeys","value","fetchUsersListOrderedByKeys","listRef","query","ref","limitToFirst","onValue","snapshot","data","val","console","log","fetchUsersListOrderedByUserName","fetchBlogsListOrderedByKeys","Provider","BlogCard","blog","link","title","userName","author","description","Blogs","useEffect","Object","entries","DatabaseContext","useDatabase","DatabaseProvider","user","setUser","userPublicData","setUserPublicData","userBlogsList","setUserBlogsList","a","signOut","alert","message","onAuthStateChanged","userPublicDataRef","uid","signIn","signInData","email","password","signInWithEmailAndPassword","catch","error","signUp","signUpData","createUserWithEmailAndPassword","then","userCredential","set","privateData","publicData","firstName","lastName","userId","fetchUserBlogsList","currentUserDataRef","BlogContext","useBlog","BlogProvider","setBlog","blogKey","setBlogKey","getBlogKeyByLink","blogLink","blogRef","key","fetchBlog","addBlog","blogData","newBlogKey","push","child","updateBlog","prevBlogData","updatedBlogData","remove","TableOfContent","articles","url","article","SectionHeader","item","headerClassname","createdAt","updatedAt","Blog","useRouteMatch","useParams","metadata","articlesListOrderedByKeys","Form","structure","onSubmit","formClassname","itemArray","setItemArray","keys","keyValuePair","placeholder","onChange","updatedItem","target","fromEntries","SIGN_IN","EDIT_USER_DATA","SIGN_UP","CREATE_BLOG","UserDataSection","updateUserPublicData","deleteUserAccount","replace","length","confirm","ArticleContext","useArticle","ArticleProvider","setArticle","articleKey","setArticleKey","getArticleKeyByLink","articleLink","articleRef","fetchArticle","addArticle","blogTitle","newArticleKey","deleteArticle","updateArticle","updatedArticleData","isLinkChanged","oldLink","convertTitleIntoLink","toLowerCase","BlogEditionSection","newBlogDataWithLink","UserBlogsSection","path","exact","Dashboard","BloggerCard","bloggerData","Bloggers","blogger","CreateBlog","MarkdownEditor","articleData","setArticleData","marginBottom","defaultValue","content","width","height","remarkPlugins","remarkGfm","CreateArticlePage","newArticleData","setNewArticleData","required","date","Date","day","getUTCDate","month","getUTCMonth","getUTCFullYear","newArticleDataWithLink","FooterLink","href","rel","FOOTER_LINKS","Footer","BloggerContext","BloggerProvider","bloggerPublicData","setBloggerPublicData","bloggerBlogsList","setBloggerBlogsList","bloggerId","setBloggerId","fetchBloggerPublicData","bloggerPublicDataRef","fetchBloggerBlogsList","bloggerBlogsListRef","getBloggerIdByUserName","bloggerRef","Blogger","Article","SignIn","SignUp","About","color","UpdateArticle","setUpdatedArticleData","updatedArticleDataWithLink","App","setUserId","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.510b3976.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nexport default function NavLink({ to, onClick, text }) {\r\n    return (\r\n        <Link\r\n            className=\"nav-link\"\r\n            to={to}\r\n            onClick={onClick}\r\n        >{text}</Link>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function LinkButton({ to, style, onClick, text, isCollapsed }) {\r\n    return (\r\n        <Link\r\n            type=\"button\"\r\n            to={to}\r\n            className={\"link-button btn btn-outline-\" + style + (isCollapsed ? \" ms-2\" : \" mt-3 d-block\")}\r\n            onClick={onClick}\r\n        >{text}</Link>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavLink from '../atoms/NavLink';\r\nimport LinkButton from '../atoms/LinkButton';\r\n\r\nconst NAVLINKS = [\r\n    {\r\n        to: \"/\",\r\n        text: \"About\",\r\n    },\r\n    {\r\n        to: \"/blogs\",\r\n        text: \"Blogs\",\r\n    },\r\n    {\r\n        to: \"/bloggers\",\r\n        text: \"Bloggers\",\r\n    },\r\n];\r\n\r\nconst PUBLIC_LINK_BUTTONS = [\r\n    {\r\n        to: \"/login\",\r\n        text: \"Sign In\",\r\n        style: \"success\"\r\n    },\r\n    {\r\n        to: \"/signup\",\r\n        text: \"Create Account\",\r\n        style: \"info\"\r\n    },\r\n];\r\n\r\nconst PRIVATE_LINK_BUTTONS = [\r\n    {\r\n        to: \"/\",\r\n        text: \"Log Out\",\r\n        style: \"danger\"\r\n    },\r\n];\r\n\r\nexport default function Header({ userFirstName, userLastName, logOut }) {\r\n\r\n    const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n    \r\n    const handleNavCollapse = () => {\r\n        setIsNavCollapsed(!isNavCollapsed);\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Blogging Platform</Link>\r\n                <button\r\n                    className=\"navbar-toggler collapsed\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarColor01\"\r\n                    aria-controls=\"navbarColor01\"\r\n                    aria-expanded={isNavCollapsed ? true : false}\r\n                    aria-label=\"Toggle navigation\"\r\n                    onClick={handleNavCollapse}\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className={`${isNavCollapsed ? \"collapse\" : null} navbar-collapse`} id=\"navbarColor01\">\r\n                    <ul className=\"navbar-nav me-auto\">\r\n                        {\r\n                            NAVLINKS.map((navLink, i) => (\r\n                                <li key={\"nav-item-\" + i} className=\"nav-item\">\r\n                                    <NavLink \r\n                                        to={navLink.to}\r\n                                        onClick={() => {\r\n                                            if (!isNavCollapsed) {\r\n                                                handleNavCollapse();\r\n                                            }\r\n                                        }}\r\n                                        text={navLink.text}\r\n                                    />\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                    <div>\r\n                        {\r\n                            userFirstName ?\r\n                                <>\r\n                                    <Link\r\n                                        to=\"/dashboard\"\r\n                                        className=\"text-light text-muted\"\r\n                                        style={{textDecoration: \"none\"}}\r\n                                        onClick={() => {\r\n                                            if (!isNavCollapsed) {\r\n                                                handleNavCollapse();\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <span className=\"me-2\"><i className=\"bi bi-person-circle\"></i></span>\r\n                                        <span className=\"me-3\">{userFirstName} {userLastName}</span>\r\n                                    </Link>\r\n                                    {\r\n                                        PRIVATE_LINK_BUTTONS.map((btn, i) => (\r\n                                            <LinkButton\r\n                                                key={\"private-link-btn-\" + i}\r\n                                                to={btn.to}\r\n                                                text={btn.text}\r\n                                                style={btn.style}\r\n                                                isCollapsed={isNavCollapsed}\r\n                                                onClick={() => {\r\n                                                    logOut();\r\n                                                    if (!isNavCollapsed) {\r\n                                                        handleNavCollapse();\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        ))\r\n                                    }\r\n                                </>\r\n                            :\r\n                                <>\r\n                                    {\r\n                                        PUBLIC_LINK_BUTTONS.map((btn, i) => (\r\n                                            <LinkButton\r\n                                                key={\"public-link-btn-\" + i}\r\n                                                to={btn.to}\r\n                                                text={btn.text}\r\n                                                style={btn.style}\r\n                                                isCollapsed={isNavCollapsed}\r\n                                                onClick={isNavCollapsed ? null : () => handleNavCollapse()}\r\n                                            />\r\n                                        ))\r\n                                    }\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}","import { initializeApp, getApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase } from \"firebase/database\";\r\n//import { getAnalytics } from \"firebase/analytics\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCDziv5T2lwy_1jcHriik2c9hWd1qPcY_s\",\r\n  authDomain: \"blogging-platform-4ebc2.firebaseapp.com\",\r\n  databaseURL: \"https://blogging-platform-4ebc2-default-rtdb.firebaseio.com\",\r\n  projectId: \"blogging-platform-4ebc2\",\r\n  storageBucket: \"blogging-platform-4ebc2.appspot.com\",\r\n  messagingSenderId: \"669118367342\",\r\n  appId: \"1:669118367342:web:0348ae0115ae90740dc87f\",\r\n  measurementId: \"G-PQXT1EE1GJ\"\r\n};\r\n\r\n// Initialize Firebase\r\nlet app;\r\ntry {\r\n  app = getApp();\r\n} catch (e) {\r\n  app = initializeApp(firebaseConfig);\r\n}\r\n\r\nexport const firebaseAuth = getAuth(app);\r\nexport const database = getDatabase(app);\r\n//const analytics = getAnalytics(firebaseApp);","import { createContext, useContext, useState } from \"react\";\r\nimport { database } from \"../firebase\";\r\n\r\nimport {\r\n    ref,\r\n    onValue,\r\n    query,\r\n    limitToFirst\r\n} from \"firebase/database\";\r\n\r\nconst ListsContext = createContext();\r\n\r\nexport const useLists = () => useContext(ListsContext);\r\n\r\nexport function ListsProvider({ children }) {\r\n\r\n    const [usersListOrderedByUserName, setUsersListOrderedByUserName] = useState();\r\n    const [usersListOrderedByKeys, setUsersListOrderedByKeys] = useState();\r\n\r\n    const [blogsListOrderedByKeys, setBlogsListOrderedByKeys] = useState();\r\n\r\n    const fetchBlogsListOrderedByKeys = () => {\r\n        const listRef = query(ref(database, \"blogs/listOrderedByKeys\"), limitToFirst(10));\r\n        onValue(listRef, (snapshot) => {\r\n            const data = snapshot.val();\r\n            console.log(\"blogs list ordered by keys:\", data);\r\n            setBlogsListOrderedByKeys(data);\r\n        });\r\n    }\r\n\r\n    const fetchUsersListOrderedByUserName = () => {\r\n        const listRef = query(ref(database, \"users/listOrderedByUserName\"), limitToFirst(10));\r\n        onValue(listRef, (snapshot) => {\r\n            const data = snapshot.val();\r\n            console.log(\"users list ordered by user name object:\", data);\r\n            setUsersListOrderedByUserName(data);\r\n        });\r\n    }\r\n\r\n    const fetchUsersListOrderedByKeys = () => {\r\n        const listRef = query(ref(database, \"users/listOrderedByKeys\"), limitToFirst(10));\r\n        onValue(listRef, (snapshot) => {\r\n            const data = snapshot.val();\r\n            console.log(\"users list ordered by user id object:\", data);\r\n            setUsersListOrderedByKeys(data);\r\n        });\r\n    }\r\n    \r\n    const value = {\r\n        usersListOrderedByKeys,\r\n        usersListOrderedByUserName,\r\n        blogsListOrderedByKeys,\r\n        fetchUsersListOrderedByKeys,\r\n        fetchUsersListOrderedByUserName,\r\n        fetchBlogsListOrderedByKeys\r\n    }\r\n\r\n    return (\r\n        <ListsContext.Provider value={value} >{children}</ListsContext.Provider>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function BlogCard({ blog }) {\r\n    return (\r\n        <div className=\"blog-card\">\r\n            <hr />\r\n            <Link to={\"/blogs/\" + blog.link}>\r\n                <h3>{blog.title}</h3>\r\n            </Link>\r\n            <p>\r\n                by\r\n                <Link to={\"bloggers/\" + blog.userName} className=\"ms-2\">\r\n                    {blog.author}\r\n                </Link>\r\n            </p>\r\n            <p>{blog.description}</p>\r\n        </div>\r\n    );\r\n}","import { useEffect } from \"react\";\r\nimport { useLists } from \"../../hooks/use-lists\";\r\nimport BlogCard from \"../molecules/BlogCard\";\r\n\r\nexport default function Blogs() {\r\n\r\n    const { blogsListOrderedByKeys, fetchBlogsListOrderedByKeys } = useLists();\r\n\r\n    useEffect(() => {\r\n        fetchBlogsListOrderedByKeys();\r\n    }, []);\r\n\r\n    if (!blogsListOrderedByKeys) return <p>Downloading blogs or... there is no blogs...</p>;\r\n\r\n    return (\r\n        <div className=\"blogs-page\">\r\n            <div className=\"blogs-list\">\r\n                <h1>Blogs</h1>\r\n                {\r\n                    Object.entries(blogsListOrderedByKeys).map((blog, i) => <BlogCard key={\"blog-card-\" + i} blog={blog[1]} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { firebaseAuth, database } from \"../firebase\";\r\n\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n  //deleteUser\r\n} from \"firebase/auth\";\r\n\r\nimport {\r\n    ref,\r\n    set,\r\n    onValue,\r\n    //remove\r\n} from \"firebase/database\";\r\n\r\nconst DatabaseContext = createContext();\r\n\r\nexport const useDatabase = () => useContext(DatabaseContext);\r\n\r\nexport function DatabaseProvider({ children }) {\r\n\r\n  const [user, setUser] = useState(null);\r\n  //const [userPrivateData, setUserPrivateData] = useState();\r\n  const [userPublicData, setUserPublicData] = useState();\r\n  const [userBlogsList, setUserBlogsList] = useState(); // ordered by keys\r\n\r\n  const signIn = (signInData) => {\r\n    const email = signInData.email;\r\n    const password = signInData.password;\r\n    return signInWithEmailAndPassword(firebaseAuth, email, password)\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const signUp = (signUpData) => {\r\n    return createUserWithEmailAndPassword(firebaseAuth, signUpData.email, signUpData.password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        //setUser(userCredential.user);\r\n        console.log(\"user is sign up. userCredential.user: \", userCredential.user);\r\n        \r\n        // create user in database:\r\n        set(ref(database, \"users/\" + userCredential.user.uid), {\r\n          privateData: {\r\n            email: signUpData.email\r\n          },\r\n          publicData: {\r\n            data: {\r\n              firstName: signUpData.firstName,\r\n              lastName: signUpData.lastName,\r\n              userName: signUpData.userName\r\n            }\r\n          }          \r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n\r\n        // add user's public data into users list ordered by keys:\r\n        set(ref(database, \"users/listOrderedByKeys/\" + userCredential.user.uid), {\r\n          firstName: signUpData.firstName,\r\n          lastName: signUpData.lastName,\r\n          userName: signUpData.userName\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n\r\n        // add user's public data into users list ordered by user name:\r\n        set(ref(database, \"users/listOrderedByUserName/\" + signUpData.userName), {\r\n          firstName: signUpData.firstName,\r\n          lastName: signUpData.lastName,\r\n          userId: userCredential.user.uid\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const logOut = async () => {\r\n    try {\r\n      await signOut(firebaseAuth);\r\n      setUser(null);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  //===================== UPDATE USER DATA\r\n\r\n  // const updateUserPublicData = (userData) => {\r\n  //   // save prev userName val:\r\n  //   const prevUserName = userPublicData.userName;\r\n  //   // update user data:\r\n  //   set(ref(database, \"users/\" + user.uid + \"/publicData/data\"), {\r\n  //     ...userData\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     alert(error.message);\r\n  //   });\r\n\r\n  //   // update user's public data in users list ordered by keys:\r\n  //   set(ref(database, \"users/listOrderedByKeys/\" + user.uid), {\r\n  //     ...userData\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     alert(error.message);\r\n  //   });\r\n\r\n  //   // update user's public data in users list ordered by user name:\r\n  //   if (userData.userName === prevUserName) {\r\n  //     // if userName wasn't updated:\r\n  //     set(ref(database, \"users/listOrderedByUserName/\" + prevUserName), {\r\n  //       firstName: userData.firstName,\r\n  //       lastName: userData.lastName,\r\n  //       userId: user.uid\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       alert(error.message);\r\n  //     });\r\n  //   } else {\r\n  //     // if userName was updated:\r\n  //     // delete prev userName record:\r\n  //     remove(ref(database, \"users/listOrderedByUserName/\" + prevUserName))\r\n  //     .then(() => console.log(prevUserName, \"record was deleted from database.\"))\r\n  //     .catch((error) => {\r\n  //       alert(error.message);\r\n  //     });\r\n  //     // set new userName record:\r\n  //     set(ref(database, \"users/listOrderedByUserName/\" + userData.userName), {\r\n  //       firstName: userData.firstName,\r\n  //       lastName: userData.lastName,\r\n  //       userId: user.uid\r\n  //     })\r\n  //     .then(() => console.log(userData.userName, \"record was added to database.\"))\r\n  //     .catch((error) => {\r\n  //       alert(error.message);\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  //==================== DELETE USER ACCOUNT  \r\n\r\n  // THIS FUNCTION IS OFF FOR A MOMENT (delete this comment, when fix)\r\n  // const deleteUserAccount = () => {\r\n  //   console.log(\"deleteUser operations:\");\r\n  //   const userForDelete = firebaseAuth.currentUser;\r\n  //   console.log(\"userForDelete:\", userForDelete);\r\n  //   const userIdForDelete = userForDelete.uid;\r\n  //   console.log(\"userIdForDelete:\", userIdForDelete);\r\n\r\n  //   if (userForDelete && userIdForDelete) {\r\n  //     // 1. delete user data first:\r\n  //     remove(ref(database, \"users/\" + userForDelete.uid)).then(() => {\r\n  //       console.log(\"User data of deleted user \" + userIdForDelete + \" was deleted...\");\r\n  //     }).catch((error) => {\r\n  //       // An error ocurred\r\n  //       alert(error.message);\r\n  //     });\r\n\r\n  //     // + delete user from two lists => [x]\r\n      \r\n  //     // 2. delete user blogs in for loop:\r\n  //     // THIS WILL BE COMPLETELY ANOTHER PROCEDURE WHEN NEW RULES & DATA STRUCTURE WILL BE SET\r\n  //     const userBlogsForDelete = Object.entries(blogs).filter(blog => blog[1].userId === userIdForDelete);\r\n  //     console.log(\"userBlogsForDelete:\", userBlogsForDelete);\r\n  //     if (userBlogsForDelete && userBlogsForDelete.length) {\r\n  //       let userBlogsKeysForDelete = [];\r\n  //       for (let i = 0; i < userBlogsForDelete.length; i++) {\r\n  //         const key = userBlogsForDelete[i][0];\r\n  //         userBlogsKeysForDelete.push(key);\r\n  //       }\r\n  //       console.log(\"userBlogsKeysForDelete:\", userBlogsKeysForDelete);\r\n  //       if (userBlogsKeysForDelete && userBlogsKeysForDelete.length) {\r\n  //         for (let n = 0; n < userBlogsKeysForDelete.length; n++) {\r\n  //           const key = userBlogsKeysForDelete[n];\r\n  //           remove(ref(database, \"blogs/\" + key)).then(() => {\r\n  //             console.log(\"Blog \" + key + \" of deleted user \" + userIdForDelete + \" was deleted...\");\r\n  //             // 3. delete user in the last loop\r\n  //             if (n === userBlogsKeysForDelete.length - 1) {\r\n  //               // eslint-disable-next-line no-restricted-globals\r\n  //               const confirmAccountDeletion = confirm(\"Your blogs & user data was deleted. Now press OK to delete your account\");\r\n  //               if (confirmAccountDeletion) {\r\n  //                 deleteUser(userForDelete).then(() => {\r\n  //                   console.log(\"User \" + userIdForDelete + \" was deleted.\");\r\n  //                 }).catch((error) => {\r\n  //                   alert(error.message, \"Try again to delete your account. Your blogs & user data were already deleted.\");\r\n  //                 });\r\n  //               }\r\n  //             }\r\n  //           }).catch((error) => {\r\n  //             // An error ocurred\r\n  //             alert(error.message);\r\n  //           });\r\n  //         }\r\n  //       } else {\r\n  //         console.log(\"There are no user blogs to delete... So delete user.\");\r\n  //         // eslint-disable-next-line no-restricted-globals\r\n  //         const confirmAccountDeletion = confirm(\"Your blogs & user data was deleted. Now press OK to delete your account\");\r\n  //         if (confirmAccountDeletion) {\r\n  //           deleteUser(userForDelete).then(() => {\r\n  //             console.log(\"User \" + userIdForDelete + \" was deleted.\");\r\n  //           }).catch((error) => {\r\n  //             alert(error.message, \"Try again to delete your account. Your blogs & user data were already deleted.\");\r\n  //           });\r\n  //         }\r\n  //       }\r\n  //     } else {\r\n  //       console.log(\"There are no user blogs to delete... So delete user.\");\r\n  //       // eslint-disable-next-line no-restricted-globals\r\n  //       const confirmAccountDeletion = confirm(\"Your blogs & user data was deleted. Now press OK to delete your account\");\r\n  //       if (confirmAccountDeletion) {\r\n  //         deleteUser(userForDelete).then(() => {\r\n  //           console.log(\"User \" + userIdForDelete + \" was deleted.\");\r\n  //         }).catch((error) => {\r\n  //           alert(error.message, \"Try again to delete your account. Your blogs & user data were already deleted.\");\r\n  //         });\r\n  //       }\r\n  //     }  \r\n  //   } else {\r\n  //     alert(\"You need to be signed in to delete your account. Try again!\")\r\n  //   }\r\n  // }\r\n\r\n  function fetchUserBlogsList() {\r\n    const currentUserDataRef = ref(database, \"users/\" + user.uid + \"/publicData/blogs\");\r\n    onValue(currentUserDataRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      console.log(\"current user blogs list data object:\", data);\r\n      setUserBlogsList(data);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(firebaseAuth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n        console.log(\"user logged in. user:\", user);\r\n        const userPublicDataRef = ref(database, \"users/\" + user.uid + \"/publicData/data\");\r\n        onValue(userPublicDataRef, (snapshot) => {\r\n          const data = snapshot.val();\r\n          console.log(\"user public data:\", data);\r\n          setUserPublicData(data);\r\n        });\r\n      } else {\r\n        setUser(null);\r\n        setUserPublicData(null);\r\n        console.log(\"user is logged out\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    signIn,\r\n    signUp,\r\n    logOut,\r\n    user,\r\n    userPublicData,\r\n    userBlogsList,\r\n    fetchUserBlogsList,\r\n    //updateUserPublicData,\r\n    //deleteUserAccount\r\n  }\r\n\r\n  return (\r\n    <DatabaseContext.Provider value={value} >{children}</DatabaseContext.Provider>\r\n  );\r\n}\r\n","import { createContext, useContext, useState } from \"react\";\r\nimport { database } from \"../firebase\";\r\nimport { useDatabase } from \"./use-database\";\r\n\r\nimport {\r\n    ref,\r\n    set,\r\n    push,\r\n    child,\r\n    //update,\r\n    onValue,\r\n    remove,\r\n    //remove,\r\n} from \"firebase/database\";\r\n\r\nconst BlogContext = createContext();\r\n\r\nexport const useBlog = () => useContext(BlogContext);\r\n\r\nexport function BlogProvider({ children }) {\r\n\r\n    const { userPublicData, user } = useDatabase();\r\n\r\n    const [blog, setBlog] = useState();\r\n    const [blogKey, setBlogKey] = useState();\r\n\r\n    const getBlogKeyByLink = (blogLink) => {\r\n        const blogRef = ref(database, \"blogs/listOrderedByLinks/\" + blogLink);\r\n        onValue(blogRef, (snapshot) => {\r\n          const data = snapshot.val();\r\n          if (data) {\r\n            console.log(\"blog key:\", data.key);\r\n            setBlogKey(data.key);\r\n          }\r\n        });\r\n    }\r\n\r\n    const fetchBlog = (blogKey) => {\r\n        const blogRef = ref(database, \"blogs/\" + blogKey);\r\n        onValue(blogRef, (snapshot) => {\r\n          const data = snapshot.val();\r\n          console.log(\"blog object:\", data);\r\n          setBlog(data);\r\n        });\r\n    }\r\n\r\n    const addBlog = (blogData) => { // blogData consists title, description & link\r\n\r\n        const newBlogKey = push(child(ref(database), \"blogs\")).key;\r\n    \r\n        if (newBlogKey && blogData) {\r\n    \r\n          // add blog to blogs in database:\r\n          set(ref(database, \"blogs/\" + newBlogKey + \"/metadata\"), {\r\n            author: userPublicData.firstName + \" \" + userPublicData.lastName,\r\n            userName: userPublicData.userName,\r\n            userId: user.uid,\r\n            ...blogData\r\n          })\r\n          .catch((error) => {\r\n            alert(error.message);\r\n          });\r\n    \r\n          // add blog to user blogs list:\r\n          set(ref(database, \"users/\" + user.uid + \"/publicData/blogs/\" + newBlogKey), {\r\n            title: blogData.title,\r\n            link: blogData.link\r\n          })\r\n          .catch((error) => {\r\n            alert(error.message);\r\n          });\r\n    \r\n          // add blog to blogs list ordered by keys:\r\n          set(ref(database, \"blogs/listOrderedByKeys/\" + newBlogKey), {\r\n            author: userPublicData.firstName + \" \" + userPublicData.lastName,\r\n            userName: userPublicData.userName,\r\n            userId: user.uid, // remember about userId, because only then rules will allow the user add smth !!!\r\n            ...blogData\r\n          })\r\n          .catch((error) => {\r\n            alert(error.message);\r\n          });\r\n          \r\n          // add blog to blogs list ordered by links:\r\n          set(ref(database, \"blogs/listOrderedByLinks/\" + blogData.link), {\r\n            userId: user.uid,\r\n            title: blogData.title,\r\n            key: newBlogKey\r\n          })\r\n          .catch((error) => {\r\n            alert(error.message);\r\n          });\r\n        } else {\r\n          alert(\"Can't add article... No blog data passed or/and no key generated... Try again.\");\r\n        }\r\n    }\r\n\r\n    const updateBlog = (prevBlogData, updatedBlogData, blogKey) => {\r\n      \r\n      if (updatedBlogData && blogKey) {\r\n\r\n        // update blog in blogs in database:\r\n        set(ref(database, \"blogs/\" + blogKey + \"/metadata\"), {\r\n          ...prevBlogData,\r\n          ...updatedBlogData\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n  \r\n        // update blog in user blogs list\r\n        // only if title or/and link changed:\r\n        if (\r\n          prevBlogData.title !== updatedBlogData.title ||\r\n          prevBlogData.link !== updatedBlogData.link\r\n          ) {\r\n          set(ref(database, \"users/\" + user.uid + \"/publicData/blogs/\" + blogKey), {\r\n            title: updatedBlogData.title,\r\n            link: updatedBlogData.link\r\n          })\r\n          .catch((error) => {\r\n            alert(error.message);\r\n          });\r\n        }\r\n  \r\n        // update blog in blogs list ordered by keys:\r\n        set(ref(database, \"blogs/listOrderedByKeys/\" + blogKey), {\r\n          ...prevBlogData,\r\n          ...updatedBlogData\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n        \r\n        // update blog in blogs list ordered by links\r\n        // only if link changed = title changed:\r\n        if (prevBlogData.link !== updatedBlogData.link) {\r\n          // add new object with new link:\r\n          set(ref(database, \"blogs/listOrderedByLinks/\" + updatedBlogData.link), {\r\n            userId: prevBlogData.userId,\r\n            title: updatedBlogData.title,\r\n            key: blogKey\r\n          })\r\n          .then(() => {\r\n            console.log(\"blog with new link:\" + updatedBlogData.link + \" was added to blogs list ordered by links.\");\r\n          }).catch((error) => {\r\n            alert(error.message);\r\n          });\r\n          // delete old object with old link:\r\n          remove(ref(database, \"blogs/listOrderedByLinks/\" + prevBlogData.link))\r\n          .then(() => {\r\n            console.log(\"blog with old link:\" + prevBlogData.link + \" was deleted from blogs list ordered by links.\");\r\n          }).catch((error) => {\r\n            alert(error.message);\r\n          });\r\n        } \r\n      } else {\r\n        alert(\"Can't update blog... No blog data or/and no key passed... Try again.\");\r\n      }\r\n    }\r\n\r\n    // const deleteBlog = (blogKey) => {\r\n  //   remove(ref(database, \"blogs/\" +  blogKey)).then(() => {\r\n  //     console.log(\"blog \" + blogKey + \" was deleted\");\r\n  //   }).catch((error) => {\r\n  //     // An error ocurred\r\n  //     console.log(error.message);\r\n  //   });\r\n  // }\r\n\r\n    const value = {\r\n        blog,\r\n        blogKey,\r\n        getBlogKeyByLink,\r\n        fetchBlog,\r\n        addBlog,\r\n        updateBlog,\r\n        //deleteBlog,\r\n    }\r\n\r\n    return (\r\n        <BlogContext.Provider value={value} >{children}</BlogContext.Provider>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function TableOfContent({ articles, url }) {\r\n\r\n    if (!articles) return <p>There are no articles in this blog...</p>\r\n    \r\n    return (\r\n        <nav className=\"table-of-content\">\r\n            <hr />\r\n            <h5 className=\"text-center\">Table of content</h5>\r\n            <ul>\r\n                {\r\n                    Object.entries(articles).map((article) =>\r\n                        <li key={article[0]}>\r\n                            <Link\r\n                                to={url + \"/\" + article[1].link}\r\n                                className=\"d-block\"\r\n                            >{article[1].title}</Link>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </nav>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function SectionHeader({ item, headerClassname }) {\r\n    return (\r\n        <header className={\"text-center \" + headerClassname}>\r\n            <h1>{item.title}</h1>\r\n            <p>\r\n                by\r\n                <Link to={\"/bloggers/\" + item.userName} className=\"ms-2\">\r\n                    {item.author}\r\n                </Link>\r\n            </p>\r\n            <p>{item.createdAt && item.createdAt}{item.updatedAt && (item.updatedAt === item.createdAt ? null : \" / \" + item.updatedAt)}</p>\r\n            <p>{item.description}</p>\r\n        </header>\r\n    );\r\n}","import { useEffect } from \"react\";\r\nimport { useRouteMatch, useParams } from \"react-router-dom\";\r\nimport { useBlog } from \"../../hooks/use-blog\";\r\nimport TableOfContent from \"../molecules/TableOfContent\";\r\nimport SectionHeader from \"../molecules/SectionHeader\";\r\n\r\nexport default function Blog() {\r\n\r\n    let { url } = useRouteMatch();\r\n    const { blogLink } = useParams();\r\n\r\n    const { \r\n        blog,\r\n        fetchBlog,\r\n        getBlogKeyByLink,\r\n        blogKey,\r\n    } = useBlog();\r\n\r\n    useEffect(() => {\r\n        if (blogLink) {\r\n            getBlogKeyByLink(blogLink);\r\n        }\r\n    }, [blogLink]);\r\n\r\n    useEffect(() => {\r\n        if (blogKey) {\r\n            fetchBlog(blogKey);\r\n        }\r\n    }, [blogKey]);\r\n\r\n    useEffect(() => {\r\n        if (blog) {\r\n            console.log(\"fetched blog:\", blog);\r\n        }\r\n    }, [blog]);\r\n\r\n    if (!blog) return <p>Downloading data or there is no data...</p>\r\n\r\n    return (\r\n        <div className=\"blog-page\">\r\n            <SectionHeader item={blog.metadata} headerClassname=\"blog-header\" />\r\n            <TableOfContent articles={blog.articlesListOrderedByKeys} url={url} />\r\n        </div>\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\nimport LinkButton from \"../atoms/LinkButton\";\r\n\r\nexport default function Form({ structure, data, onSubmit, text, to, formClassname}) {\r\n\r\n    const [itemArray, setItemArray] = useState();\r\n\r\n    useEffect(() => {\r\n        if (structure) {\r\n            const itemArray = [];\r\n            // transform structure / data object into array:\r\n            Object.keys(structure).map(key => {\r\n                const keyValuePair =\r\n                    data && data[key]               // is item passed ?\r\n                    ? [key, data[key]]              // set item[key] value\r\n                    : [                             // if no item\r\n                        key, structure[key].value   // does structure[key] has value ?\r\n                        ? structure[key].value      // if true, use structure[key] value\r\n                        : \"\"                        // if false, set empty value to the key\r\n                    ]\r\n                ;\r\n                return itemArray.push(keyValuePair);\r\n            });\r\n            if (data) {\r\n                console.log(\"item array created from passed data:\", itemArray);\r\n            } else {\r\n                console.log(\"item array created from structure template:\", itemArray);\r\n            }\r\n            setItemArray([...itemArray]);\r\n        }\r\n    }, [structure, data]);\r\n\r\n    if (!structure || (structure && !itemArray)) return <p>Nothing has been passed to the Form component...</p>;\r\n\r\n    return (\r\n        <form className={formClassname} >\r\n            <div className=\"row mb-3\">\r\n                {\r\n                    Object.keys(structure).map((key, i) => (\r\n                        <div className=\"mb-2\" key={key + \"-input-div\"}>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type={structure[key].type ? structure[key].type : \"text\"}\r\n                                value={itemArray[i] ? itemArray[i][1] : \"\"} // fix this !!!!!!!!!!!\r\n                                placeholder={structure[key].placeholder ? structure[key].placeholder : key}\r\n                                onChange={(e) => {\r\n                                    const updatedItem = [...itemArray];\r\n                                    updatedItem[i] = [...updatedItem[i]];\r\n                                    updatedItem[i][1] = e.target.value;\r\n                                    setItemArray([...updatedItem]);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            <LinkButton\r\n                text={text}\r\n                style=\"success\"\r\n                to={to}\r\n                onClick={() => {\r\n                    // tranform item / data array back to object & pass it:\r\n                    onSubmit(Object.fromEntries(itemArray));\r\n                }}\r\n            />\r\n        </form>\r\n    );\r\n}","// add as much inputs, as you like\r\n// according to template below:\r\n\r\n// some_key_representanting_variable: { // name of the key / variable\r\n//   type: \"password\", // (OPTIONAL) include type only if it's value is not \"text\"\r\n//   value: \"some value\", // (OPTIONAL) if it's empty, skip this key-value pair\r\n//   placeholder: \"some placeholder\" // (OPTIONAL) if it's same as key / variable name, skip it\r\n// }\r\n\r\n// if all properties are defaul & skipped,\r\n// add a key_name: {},\r\n\r\nexport const SIGN_IN = {\r\n    email: {\r\n        type: \"email\"\r\n    },\r\n    password: {\r\n        type: \"password\"\r\n    },\r\n};\r\n\r\nexport const EDIT_USER_DATA = {\r\n    firstName: {\r\n        placeholder: \"input your real first name\"\r\n    },\r\n    lastName: {\r\n        placeholder: \"input your real last name\"\r\n    },\r\n    userName: {\r\n        placeholder: \"input your user name using lower case letters only\"\r\n    }\r\n};\r\n\r\nexport const SIGN_UP = {\r\n    ...EDIT_USER_DATA,\r\n    ...SIGN_IN\r\n};\r\n\r\nexport const CREATE_BLOG = {\r\n    title: {},\r\n    description: {}\r\n}","import { useDatabase } from \"../../../hooks/use-database\";\r\nimport Form from \"../../organisms/Form\";\r\nimport LinkButton from \"../../atoms/LinkButton\";\r\nimport { EDIT_USER_DATA } from \"../../../initial-data/form-structure-templates\";\r\n\r\nexport default function UserDataSection() {\r\n\r\n    const { userPublicData, updateUserPublicData, deleteUserAccount } = useDatabase();\r\n\r\n    function handleSubmit(data) {\r\n        if (\r\n            data.firstName.replace(/\\s/g, '').length &&\r\n            data.lastName.replace(/\\s/g, '').length &&\r\n            data.userName.replace(/\\s/g, '').length\r\n        ) {\r\n            updateUserPublicData(data);\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to update your account data!\");\r\n        }\r\n    }\r\n\r\n    if (!userPublicData) return <p>Downloading your data...</p>\r\n    \r\n    return (\r\n        <div className=\"edit-user-data-section\">\r\n            <Form \r\n                structure={EDIT_USER_DATA}\r\n                data={userPublicData}\r\n                onSubmit={handleSubmit}\r\n                to=\"/dashboard\"\r\n                text=\"save changes\"\r\n                formClassname=\"edit-user-data-form\"\r\n            />\r\n            <LinkButton\r\n                to=\"/dashboard\"\r\n                style=\"danger\"\r\n                text=\"delete my account\"\r\n                onClick={() => {\r\n                    // eslint-disable-next-line no-restricted-globals\r\n                    const wantToDelete = confirm(\"Are you sure, you want to delete your account & your articles forever? There's no turning back... Delete account?\");\r\n                    if (wantToDelete) {\r\n                        alert(\"Sorry, for a moment delete account function is being updating, so it's off... Please, contact to the owner of this app to delete your account manually or wait for the updates.\");\r\n                        //deleteUserAccount();\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}","import { createContext, useContext, useState } from \"react\";\r\nimport { database } from \"../firebase\";\r\nimport { useDatabase } from \"./use-database\";\r\n\r\nimport {\r\n    ref,\r\n    set,\r\n    push,\r\n    child,\r\n    //update,\r\n    onValue,\r\n    remove,\r\n    //query,\r\n    //limitToFirst\r\n} from \"firebase/database\";\r\n\r\nconst ArticleContext = createContext();\r\n\r\nexport const useArticle = () => useContext(ArticleContext);\r\n\r\nexport function ArticleProvider({ children }) {\r\n\r\n    const { userPublicData, user } = useDatabase();\r\n\r\n    const [article, setArticle] = useState();\r\n    const [articleKey, setArticleKey] = useState();\r\n\r\n    const getArticleKeyByLink = (articleLink) => {\r\n      const articleRef = ref(database, \"articles/listOrderedByLinks/\" + articleLink);\r\n      onValue(articleRef, (snapshot) => {\r\n        const data = snapshot.val();\r\n        if (data) {\r\n          console.log(\"article key:\", data.key);\r\n          setArticleKey(data.key);\r\n        }\r\n      });\r\n    }\r\n\r\n    const fetchArticle = (articleKey) => {\r\n      const articleRef = ref(database, \"articles/\" + articleKey);\r\n      onValue(articleRef, (snapshot) => {\r\n        const data = snapshot.val();\r\n        console.log(\"article object:\", data);\r\n        setArticle(data);\r\n      });\r\n    }\r\n\r\n    const addArticle = (blogKey, blogTitle, article) => {\r\n      // article: {title, description, content, link, createdAt}\r\n  \r\n      const newArticleKey = push(child(ref(database), \"articles\")).key;\r\n  \r\n      if (newArticleKey) {\r\n  \r\n        // add article to articles in database:\r\n        set(ref(database, \"articles/\" + newArticleKey + \"/metadata\"), {\r\n          ...article,\r\n          author: userPublicData.firstName + \" \" + userPublicData.lastName,\r\n          userName: userPublicData.userName,\r\n          userId: user.uid,\r\n          blogKey: blogKey,\r\n          blogTitle: blogTitle\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n  \r\n        // add article to articles list ordered by links\r\n        set(ref(database, \"articles/listOrderedByLinks/\" + article.link), {\r\n          title: article.title,\r\n          key: newArticleKey,\r\n          userId: user.uid\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n  \r\n        // add article to its blog's list ordered by keys\r\n        set(ref(database, \"blogs/\" + blogKey + \"/articlesListOrderedByKeys/\" + newArticleKey), {\r\n          link: article.link,\r\n          title: article.title,\r\n          userId: user.uid\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n  \r\n        // add article to its blog's list ordered by links\r\n        set(ref(database, \"blogs/\" + blogKey + \"/articlesListOrderedByLinks/\" + article.link), {\r\n          title: article.title,\r\n          key: newArticleKey,\r\n          userId: user.uid\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n      }\r\n    }\r\n\r\n    const updateArticle = (updatedArticleData, articleKey, isLinkChanged, oldLink) => {\r\n  \r\n      if (articleKey && updatedArticleData) {\r\n  \r\n        // update article in articles in database:\r\n        set(ref(database, \"articles/\" + articleKey + \"/metadata\"), {\r\n          ...updatedArticleData\r\n        })\r\n        .then(() => {\r\n          console.log(\"Article\", updatedArticleData.title, \"was updated.\");\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n  \r\n        // update article in articles lists\r\n        // only if link changed\r\n        if (isLinkChanged) {\r\n\r\n          //set new object in articles list ordered by links:\r\n          set(ref(database, \"articles/listOrderedByLinks/\" + updatedArticleData.link), {\r\n            title: updatedArticleData.title,\r\n            key: articleKey,\r\n            userId: updatedArticleData.userId\r\n          })\r\n          .then(() => {\r\n            console.log(\"article with new link:\" + updatedArticleData.link + \" was added to articles list ordered by links.\");\r\n          })\r\n          .catch((error) => {\r\n            alert(error.message);\r\n          });\r\n          // delete old object in articles list ordered by links:\r\n          if (oldLink) {\r\n            remove(ref(database, \"articles/listOrderedByLinks/\" + oldLink))\r\n            .then(() => {\r\n              console.log(\"article with old link:\" + oldLink + \" was deleted from articles list ordered by links.\");\r\n            })\r\n            .catch((error) => {\r\n              alert(error.message);\r\n            });\r\n          } else {\r\n            console.log(\"No old link passed...\");\r\n          }\r\n\r\n          // update article to its blog's list ordered by keys\r\n          set(ref(database, \"blogs/\" + updatedArticleData.blogKey + \"/articlesListOrderedByKeys/\" + articleKey), {\r\n            link: updatedArticleData.link,\r\n            title: updatedArticleData.title,\r\n            userId: updatedArticleData.userId\r\n          })\r\n          .catch((error) => {\r\n            alert(error.message);\r\n          });\r\n    \r\n          //set new object in blog's articles list ordered by links:\r\n          set(ref(database, \"blogs/\" + updatedArticleData.blogKey + \"/articlesListOrderedByLinks/\" + updatedArticleData.link), {\r\n            title: updatedArticleData.title,\r\n            key: articleKey,\r\n            userId: updatedArticleData.userId\r\n          })\r\n          .then(() => {\r\n            console.log(\"article with new link:\" + updatedArticleData.link + \" was added to blog's articles list ordered by links.\");\r\n          })\r\n          .catch((error) => {\r\n            alert(error.message);\r\n          });\r\n          // delete old object in blog's articles list ordered by links:\r\n          if (oldLink) {\r\n            remove(ref(database, \"blogs/\" + updatedArticleData.blogKey + \"/articlesListOrderedByLinks/\" + oldLink))\r\n            .then(() => {\r\n              console.log(\"article with old link:\" + oldLink + \" was deleted from blog's articles list ordered by links.\");\r\n            })\r\n            .catch((error) => {\r\n              alert(error.message);\r\n            });\r\n          } else {\r\n            console.log(\"No old link passed...\");\r\n          }\r\n        } else {\r\n          console.log(\"Updated article link is the same, so articles list ordered by link didn't change.\");\r\n        }\r\n      } else {\r\n        alert(\"Can't update article... No article data or/and no key passed... Try again.\");\r\n      }\r\n    }\r\n\r\n    const deleteArticle = (articleKey, title, link, blogKey) => {\r\n\r\n      // delete article from articles in database:\r\n      remove(ref(database, \"articles/\" + articleKey))\r\n      .then(() => {\r\n        console.log(\"Article\", title, \"was deleted.\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n\r\n      // delete article from articles list ordered by links:\r\n      remove(ref(database, \"articles/listOrderedByLinks/\" + link))\r\n      .then(() => {\r\n        console.log(\"article with the link:\" + link + \" was deleted from articles list ordered by links.\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n\r\n      // delete article from its blog's list ordered by keys:\r\n      remove(ref(database, \"blogs/\" + blogKey + \"/articlesListOrderedByKeys/\" + articleKey))\r\n      .then(() => {\r\n        console.log(\"article with the key \" + articleKey + \" was deleted from its blog \" + blogKey + \" articles list ordered by keys.\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n\r\n      // delete article from its blog's list ordered by links:\r\n      remove(ref(database, \"blogs/\" + blogKey + \"/articlesListOrderedByLinks/\" + link))\r\n      .then(() => {\r\n        console.log(\"article with the link \" + link + \" was deleted from its blog \" + blogKey + \" articles list ordered by links.\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n    }\r\n    \r\n    const value = {\r\n        article,\r\n        articleKey,\r\n        getArticleKeyByLink,\r\n        fetchArticle,\r\n        addArticle,\r\n        deleteArticle,\r\n        updateArticle\r\n    }\r\n\r\n    return (\r\n        <ArticleContext.Provider value={value} >{children}</ArticleContext.Provider>\r\n    );\r\n}","export default function convertTitleIntoLink(title) {\r\n    return (title.replace(/ /g, \"-\").toLowerCase());\r\n}","import { useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useBlog } from \"../../../hooks/use-blog\";\r\nimport { useArticle } from \"../../../hooks/use-article\";\r\nimport convertTitleIntoLink from \"../../../functions/convertTitleIntoLink\";\r\nimport Form from \"../../organisms/Form\";\r\nimport { CREATE_BLOG } from \"../../../initial-data/form-structure-templates\";\r\n\r\nexport default function BlogEditionSection() {\r\n\r\n    const { blogLink } = useParams();\r\n\r\n    const { \r\n        blog,\r\n        fetchBlog,\r\n        getBlogKeyByLink,\r\n        blogKey,\r\n        updateBlog,\r\n        //deleteBlog\r\n    } = useBlog();\r\n\r\n    const { deleteArticle } = useArticle();\r\n\r\n    useEffect(() => {\r\n        if (blogLink) {\r\n            getBlogKeyByLink(blogLink);\r\n        }\r\n    }, [blogLink]);\r\n\r\n    useEffect(() => {\r\n        if (blogKey) {\r\n            fetchBlog(blogKey);\r\n        }\r\n    }, [blogKey]);\r\n\r\n    useEffect(() => {\r\n        if (blog) {\r\n            console.log(\"fetched blog:\", blog);\r\n        }\r\n    }, [blog]);\r\n\r\n    function handleBlogEditionFormSubmit(updatedBlogData) {\r\n\r\n        if (\r\n            updatedBlogData.title.replace(/\\s/g, '').length &&\r\n            updatedBlogData.description.replace(/\\s/g, '').length\r\n        ) {\r\n            const link = convertTitleIntoLink(updatedBlogData.title);\r\n            const newBlogDataWithLink = {\r\n                ...updatedBlogData,\r\n                link: link\r\n            }\r\n            //updatedBlog(prevBlogData, updatedBlogData, blogKey)\r\n            updateBlog(blog.metadata, newBlogDataWithLink, blogKey);\r\n            //alert(\"At the moment you can not update blog. Check the note in about section.\");\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to update your blog data... Try again!\");\r\n        }\r\n    }\r\n\r\n    if (!blog) return <p>Downloading data or there is no data...</p>\r\n\r\n    return (\r\n        <div className=\"blog-edition-section row\">\r\n            <div className=\"col-lg\">\r\n                <Form\r\n                    structure={CREATE_BLOG}\r\n                    data={blog.metadata}\r\n                    onSubmit={handleBlogEditionFormSubmit}\r\n                    text=\"save changes\"\r\n                    to=\"/dashboard/user-blogs\"\r\n                    formClassname=\"blog-edition-form\"\r\n                />\r\n                {/*<Link\r\n                    to=\"/dashboard/user-blogs\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-danger mb-3 d-block\"\r\n                    onClick={() => {\r\n                        // eslint-disable-next-line no-restricted-globals\r\n                        const wantToDeleteBlog = confirm(\"Are you sure, you want to delete this blog & all articles from this blog forever? There's no turning back... Delete blog?\");\r\n                        if (wantToDeleteBlog) {\r\n                            //deleteBlog(blogKey);\r\n                            alert(\"At the moment you can not delete blog. Check the note in about section.\");\r\n                        }\r\n                    }}\r\n                >\r\n                    Delete blog\r\n                </Link>*/}\r\n            </div>\r\n            <div className=\"col-lg\">\r\n                <h4 className=\"text-center\">Articles</h4>\r\n                <hr />\r\n                {\r\n                    blog.articlesListOrderedByKeys ? (\r\n                        Object.entries(blog.articlesListOrderedByKeys).map((article) => (\r\n                            <div key={article[0]}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md\">\r\n                                        <h5>{article[1].title}</h5>\r\n                                    </div>\r\n                                    <div className=\"col-md text-end\">\r\n                                        <Link\r\n                                            to={\"/edit-article/\" + blogKey + \"/\" + article[0]}\r\n                                            className=\"btn btn-secondary d-inline\"\r\n                                        >\r\n                                            <i className=\"bi bi-pencil\" />\r\n                                        </Link>\r\n                                        <Link\r\n                                            to={\"/blogs/\" + blogLink + \"/\" + article[1].link}\r\n                                            className=\"btn btn-secondary d-inline\"\r\n                                        >\r\n                                            <i className=\"bi bi-eye\" />\r\n                                        </Link>\r\n                                        <button\r\n                                            className=\"btn btn-danger d-inline\"\r\n                                            onClick={() => {\r\n                                                // eslint-disable-next-line no-restricted-globals\r\n                                                const wantToDeleteArticle = confirm(\"Are you sure, you want to delete this article from this blog forever? There's no turning back... Delete article?\");\r\n                                                if (wantToDeleteArticle) {\r\n                                                    //articleKey, title, link, blogKey\r\n                                                    deleteArticle(article[0], article[1].title, article[1].link, blogKey);\r\n                                                    //alert(\"At the moment you can not delete article. Check the note in about section.\");\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                            <i className=\"bi bi-trash\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <div>\r\n                            There are no articles...\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useDatabase } from \"../../../hooks/use-database\";\r\nimport { Link, Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport BlogEditionSection from \"./BlogEditionSection\";\r\nimport LinkButton from \"../../atoms/LinkButton\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function UserBlogsSection() {\r\n\r\n    let {path, url} = useRouteMatch();\r\n\r\n    const { userBlogsList, fetchUserBlogsList } = useDatabase(); // + deleteBlog\r\n\r\n    useEffect(() => {\r\n        fetchUserBlogsList();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"user-blogs-section-in-dashboard\">\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <div>\r\n                        <LinkButton\r\n                            to=\"/create-blog\"\r\n                            style=\"info mb-3\"\r\n                            text=\"create new blog\"\r\n                        />\r\n                        {\r\n                            userBlogsList ?\r\n                                Object.entries(userBlogsList).map((blog) =>\r\n                                    <div key={blog[0]}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <Link\r\n                                                    to={url + \"/\" + blog[1].link}\r\n                                                >\r\n                                                    <h5>{blog[1].title}</h5>\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"col-4 text-end\">\r\n                                                <Link\r\n                                                    to={\"/create-article/\" + blog[0] + \"/\" + blog[1].title}\r\n                                                    className=\"text-info\"\r\n                                                >\r\n                                                    <i className=\"bi bi-plus-square me-2\" />\r\n                                                </Link>\r\n                                                <Link\r\n                                                    className=\"text-primary\"\r\n                                                    to={`/blogs/${blog[1].link}`}\r\n                                                >\r\n                                                    <i className=\"bi bi-eye me-2\" />\r\n                                                </Link>\r\n                                                <Link\r\n                                                    className=\"text-danger\"\r\n                                                    to=\"/dashboard/user-blogs\"\r\n                                                    onClick={() => {\r\n                                                        // eslint-disable-next-line no-restricted-globals\r\n                                                        const wantToDeleteBlog = confirm(\"Are you sure, you want to delete this blog & all articles from this blog forever? There's no turning back... Delete blog?\");\r\n                                                        if (wantToDeleteBlog) {\r\n                                                            //deleteBlog(blog[0]);\r\n                                                            alert(\"At the moment you can not delete blog... Check the note in about section.\");\r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <i className=\"bi bi-trash\" />\r\n                                                </Link>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        <hr />\r\n                                    </div>\r\n                                )\r\n                            :\r\n                                <div>\r\n                                    <h5 className=\"text-center\">There are no blogs yet... Create one!</h5>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </Route>\r\n                <Route path={path + \"/:blogLink\"}>\r\n                    <BlogEditionSection />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import { Link, Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport UserDataSection from \"../page-sections/dashboard/UserDataSection\";\r\nimport UserBlogsSection from \"../page-sections/dashboard/UserBlogsSection\";\r\nimport { useDatabase } from \"../../hooks/use-database\";\r\n\r\nexport default function Dashboard({ userId }) {\r\n\r\n    let {path} = useRouteMatch();\r\n\r\n    const { fetchUserBlogsList } = useDatabase();\r\n\r\n    if (!userId) return <p>You need to be logged to see your dashboard...</p>\r\n    \r\n    return (\r\n        <div className=\"dashboard-page\">\r\n            <nav className=\"dashboard-nav text-center\">\r\n                <Link\r\n                    to={`/dashboard/user-data`}\r\n                    className=\"me-2\"\r\n                >Your profile data</Link>\r\n                <span> | </span>\r\n                <Link\r\n                    to={`/dashboard/user-blogs`}\r\n                    className=\"ms-2\"\r\n                    onClick={() => fetchUserBlogsList(userId)}\r\n                >Your blogs</Link>\r\n            </nav>\r\n            <hr />\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <UserDataSection />\r\n                </Route>\r\n                <Route path={`${path}/user-data`}>\r\n                    <UserDataSection />\r\n                </Route>\r\n                <Route path={`${path}/user-blogs`}>\r\n                    <UserBlogsSection />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function BloggerCard({ bloggerData }) {\r\n\r\n    return (\r\n        <div className=\"blogger-card\">\r\n            <hr />\r\n            <Link\r\n                to={\"bloggers/\" + bloggerData.userName}\r\n                className=\"d-block my-2\"\r\n                style={{textDecoration: \"none\"}}\r\n            >\r\n                <i className=\"bi bi-person-circle me-2\"></i>\r\n                {bloggerData.firstName + \" \" + bloggerData.lastName + \" | @\" + bloggerData.userName}\r\n            </Link>\r\n        </div>\r\n    );\r\n}","import { useEffect } from \"react\";\r\nimport { useLists } from \"../../hooks/use-lists\";\r\nimport BloggerCard from \"../molecules/BloggerCard\";\r\n\r\nexport default function Bloggers() {\r\n\r\n    const {\r\n        fetchUsersListOrderedByUserName,\r\n        usersListOrderedByUserName\r\n    } = useLists();\r\n\r\n    useEffect(() => {\r\n        if (!usersListOrderedByUserName) {\r\n            fetchUsersListOrderedByUserName();\r\n        }\r\n    }, [usersListOrderedByUserName]);\r\n\r\n    if (!usersListOrderedByUserName) return <p>Downloading bloggers list or... there are no bloggers</p>\r\n\r\n    return (\r\n        <section className=\"bloggers-page\">\r\n            <h1>Bloggers</h1>\r\n            <nav className=\"bloggers-list\">\r\n                {\r\n                    Object.entries(usersListOrderedByUserName).map(blogger =>\r\n                        <BloggerCard \r\n                            key={blogger[0]}\r\n                            bloggerData={{...blogger[1], userName: blogger[0]}}\r\n                        />\r\n                    )}\r\n            </nav>\r\n        </section>\r\n    );\r\n}","import { useBlog } from \"../../hooks/use-blog\";\r\nimport convertTitleIntoLink from \"../../functions/convertTitleIntoLink\";\r\nimport Form from \"../organisms/Form\";\r\nimport { CREATE_BLOG } from \"../../initial-data/form-structure-templates\";\r\n\r\nexport default function CreateBlog() {\r\n\r\n    const { addBlog } = useBlog();\r\n\r\n    function handleSubmit(blog) {\r\n        if (\r\n            blog.title.replace(/\\s/g, '').length &&\r\n            blog.description.replace(/\\s/g, '').length\r\n        ) {\r\n            const link = convertTitleIntoLink(blog.title);\r\n            const newBlogDataWithLink = {\r\n                ...blog,\r\n                link: link\r\n            }\r\n            addBlog(newBlogDataWithLink);\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to create new blog... Try again!\");\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <div className=\"create-blog-section container\">\r\n            <h1>Create new blog!</h1>\r\n            <hr />\r\n            <Form\r\n                structure={CREATE_BLOG}\r\n                text=\"create blog\"\r\n                to=\"/dashboard/user-blogs\"\r\n                formClassname=\"create-blog-form\"\r\n                onSubmit={handleSubmit}\r\n                //onSubmit={() => alert(\"I'm currently updating the app according to new database structure & security rules, so you can't create a blog at the moment... Sorry, wait a few days!\")}\r\n\r\n            />            \r\n        </div>\r\n    );\r\n}","import ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\n\r\nexport default function MarkdownEditor({ articleData, setArticleData }) {\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"Editor col-lg mt-2 mx-2\" style={{marginBottom: 90}}>\r\n                <p className=\"text-center\">Write your content here using Markdown Syntax (ommit title)</p>\r\n                <hr />\r\n                <textarea\r\n                    defaultValue={articleData.content}\r\n                    onChange={(e) => setArticleData({...articleData, content: e.target.value})}\r\n                    style={{width: \"100%\", height: \"80%\"}}\r\n                />\r\n            </div>\r\n            <div className=\"RenderedView col-lg m-2\">\r\n                <p className=\"text-center\">Here you can see how your article would be looking like</p>\r\n                <hr />\r\n                <div>\r\n                    <h1>{articleData.title}</h1>\r\n                    <ReactMarkdown children={articleData.content} remarkPlugins={[remarkGfm]} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n<button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success my-2\"\r\n                    onClick={() => console.log(contentForEdition)}\r\n                >Save changes</button>\r\n                */\r\n\r\n/*\r\n# Finally I'm used!\r\n\r\nFinally this markdown editor will be used in real-life project - Blogging Platform!\r\n\r\nI've made it separately a few days ago & now I can use this extra feature to let my users:\r\n\r\n- create articles\r\n- edit them\r\n- and format text whatever they like!\r\n*/","import { useState } from \"react\";\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport MarkdownEditor from \"../page-sections/create-article/MarkdownEditor\";\r\nimport { useArticle } from \"../../hooks/use-article\";\r\nimport convertTitleIntoLink from \"../../functions/convertTitleIntoLink\";\r\n\r\nexport default function CreateArticlePage() {\r\n\r\n    const { blogKey } = useParams();\r\n    const { blogTitle } = useParams();\r\n\r\n    const { addArticle } = useArticle();\r\n\r\n    const [newArticleData, setNewArticleData] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        content: \"\"\r\n    });\r\n\r\n    function handleSubmit() {\r\n        if (\r\n            newArticleData.title.replace(/\\s/g, '').length &&\r\n            newArticleData.description.replace(/\\s/g, '').length\r\n        ) {\r\n            const articleLink = convertTitleIntoLink(newArticleData.title);\r\n            const date = new Date();\r\n            const day = date.getUTCDate();\r\n            const month = date.getUTCMonth() + 1;\r\n            const year = date.getUTCFullYear();\r\n            const createdAt = year + \".\" + month + \".\" + day;\r\n            const newArticleDataWithLink = {\r\n                ...newArticleData,\r\n                link: articleLink,\r\n                createdAt: createdAt\r\n            }\r\n            addArticle(blogKey, blogTitle, newArticleDataWithLink);\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to create new article... Try again!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-article-page container\">\r\n            <form className=\"create-article-form\">\r\n                <h1>Create new article!</h1>\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg mb-2\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"title\"\r\n                            onChange={(e) => setNewArticleData({...newArticleData, title: e.target.value})}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg mb-2\">\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"description\"\r\n                            onChange={(e) => setNewArticleData({...newArticleData, description: e.target.value})}\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <hr />\r\n            <MarkdownEditor\r\n                articleData={newArticleData}\r\n                setArticleData={setNewArticleData}\r\n            />\r\n            <Link\r\n                to=\"/dashboard/user-blogs\"\r\n                type=\"button\"\r\n                className=\"btn btn-primary mb-3\"\r\n                onClick={handleSubmit}\r\n                //onClick={() => alert(\"I'm currently updating the app according to new database structure & security rules, so you can't create an article at the moment... Sorry, wait a few days!\")}\r\n            >\r\n                Create new article\r\n            </Link>\r\n        </div>\r\n    );\r\n}","export default function FooterLink({ href, text }) {\r\n    return (\r\n        <a\r\n            className=\"footer-link d-inline me-2 ms-2\"\r\n            style={{textDecoration: \"none\"}}\r\n            href={href}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n        >{text}</a>\r\n    );\r\n}","import FooterLink from \"../atoms/FooterLink\";\r\n\r\nconst FOOTER_LINKS = [\r\n    {\r\n        href: \"https://github.com/vadimgierko/blogging-platform\",\r\n        text: \"Blogging Platform\"\r\n    },\r\n    {\r\n        href: \"https://github.com/vadimgierko/markdown-text-editor\",\r\n        text: \"Markdown Editor\"\r\n    },\r\n    {\r\n        href: \"https://github.com/vadimgierko\",\r\n        text: \"Vadim Gierko\"\r\n    },\r\n];\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer text-center text-muted\">\r\n            <hr />\r\n            <FooterLink href={FOOTER_LINKS[0].href} text={FOOTER_LINKS[0].text} />\r\n            &\r\n            <FooterLink href={FOOTER_LINKS[1].href} text={FOOTER_LINKS[1].text} />\r\n            &copy; 2021 - 2022\r\n            <FooterLink href={FOOTER_LINKS[2].href} text={FOOTER_LINKS[2].text} />\r\n        </div>\r\n    );\r\n}","import { createContext, useContext, useState } from \"react\";\r\nimport { database } from \"../firebase\";\r\n\r\nimport {\r\n    ref,\r\n    onValue\r\n} from \"firebase/database\";\r\n\r\nconst BloggerContext = createContext();\r\n\r\nexport const useBlogger = () => useContext(BloggerContext);\r\n\r\nexport function BloggerProvider({ children }) {\r\n\r\n    const [bloggerPublicData, setBloggerPublicData] = useState();\r\n    const [bloggerBlogsList, setBloggerBlogsList] = useState();\r\n    const [bloggerId, setBloggerId] = useState();\r\n\r\n    const fetchBloggerPublicData = (userId) => {\r\n        const bloggerPublicDataRef = ref(database, \"users/\" + userId + \"/publicData/data\");\r\n        onValue(bloggerPublicDataRef, (snapshot) => {\r\n          const data = snapshot.val();\r\n          console.log(\"blogger public data object:\", data);\r\n          setBloggerPublicData(data);\r\n        });\r\n    }\r\n    \r\n    const fetchBloggerBlogsList = (userId) => { //================= ordered by keys\r\n        const bloggerBlogsListRef = ref(database, \"users/\" + userId + \"/publicData/blogs\");\r\n        onValue(bloggerBlogsListRef, (snapshot) => {\r\n          const data = snapshot.val();\r\n          console.log(\"blogger blogs list object:\", data);\r\n          setBloggerBlogsList(data);\r\n        });\r\n    }\r\n    \r\n    const getBloggerIdByUserName = (userName) => {\r\n        const bloggerRef = ref(database, \"users/listOrderedByUserName/\" + userName);\r\n        onValue(bloggerRef, (snapshot) => {\r\n          const data = snapshot.val();\r\n          if (data) {\r\n            console.log(\"blogger id got by user name:\", data.userId);\r\n            setBloggerId(data.userId);\r\n          } else {\r\n            console.log(\"There is no user with user name:\", userName);\r\n          }\r\n        });\r\n    }\r\n    \r\n    const value = {\r\n        bloggerPublicData,\r\n        bloggerBlogsList,\r\n        bloggerId,\r\n        fetchBloggerPublicData,\r\n        fetchBloggerBlogsList,\r\n        getBloggerIdByUserName\r\n    }\r\n\r\n    return (\r\n        <BloggerContext.Provider value={value} >{children}</BloggerContext.Provider>\r\n    );\r\n}","import { useBlogger } from \"../../hooks/use-blogger\";\r\nimport { useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nexport default function Blogger() {\r\n\r\n    const { userName } = useParams();\r\n\r\n    const {\r\n        bloggerPublicData,\r\n        fetchBloggerPublicData,\r\n        bloggerBlogsList,\r\n        fetchBloggerBlogsList,\r\n        getBloggerIdByUserName,\r\n        bloggerId\r\n    } = useBlogger();\r\n\r\n    useEffect(() => {\r\n        if (userName) {\r\n            getBloggerIdByUserName(userName);\r\n        }\r\n    }, [userName]);\r\n\r\n    useEffect(() => {\r\n        if (bloggerId) {\r\n            fetchBloggerPublicData(bloggerId);\r\n            fetchBloggerBlogsList(bloggerId);\r\n        }\r\n    }, [bloggerId]);\r\n\r\n    if (!bloggerPublicData) return <p>Downloading data or ... there is no blogger of user name: {bloggerPublicData && bloggerPublicData.userName}</p>;\r\n\r\n    return (\r\n        <div className=\"blogger-page\">\r\n            <h1>{bloggerPublicData.firstName + \" \" + bloggerPublicData.lastName}</h1>\r\n            <hr />\r\n            <p>user name: {\"@\" + bloggerPublicData.userName}</p>\r\n            <nav className=\"blogger-blogs\">\r\n                {\r\n                    bloggerBlogsList\r\n                    ? Object.entries(bloggerBlogsList).map((blog) => \r\n                            <Link key={blog[0]} to={\"/blogs/\" + blog[1].link}>\r\n                                <h3>{blog[1].title}</h3>\r\n                            </Link>\r\n                        )\r\n                    : <p>Downloading blogger blogs or there are no blogs...</p>\r\n                }\r\n            </nav>\r\n        </div>\r\n    );\r\n}","import { useEffect } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useArticle } from \"../../hooks/use-article\";\r\nimport SectionHeader from \"../molecules/SectionHeader\";\r\n\r\nexport default function Article() {\r\n\r\n    const { articleLink } = useParams();\r\n\r\n    const {\r\n        article,\r\n        articleKey,\r\n        fetchArticle,\r\n        getArticleKeyByLink,\r\n    } = useArticle();\r\n\r\n    useEffect(() => {\r\n        if (articleLink) {\r\n            getArticleKeyByLink(articleLink);\r\n        }\r\n    }, [articleLink]);\r\n\r\n    useEffect(() => {\r\n        if (articleKey) {\r\n            fetchArticle(articleKey);\r\n        }\r\n    }, [articleKey]);\r\n\r\n    if (!article) return <p>Downloading article or there is no such article...</p>;\r\n\r\n    return (\r\n        <div className=\"article-page\">\r\n            <article className=\"article\">\r\n                <SectionHeader item={article.metadata} headerClassname=\"article-header\" />\r\n                <hr />\r\n                <ReactMarkdown children={article.metadata.content} remarkPlugins={[remarkGfm]} />\r\n            </article>\r\n        </div>\r\n    );\r\n}","import { useDatabase } from \"../../hooks/use-database\";\r\nimport Form from \"../organisms/Form\";\r\nimport { SIGN_IN } from \"../../initial-data/form-structure-templates\";\r\n\r\nexport default function SignIn() {\r\n\r\n    const { signIn } = useDatabase();\r\n\r\n    function handleSubmit(signInData) {\r\n        if (signInData.email.replace(/\\s/g, '').length) {\r\n            if (signInData.password.replace(/\\s/g, '').length) {\r\n                signIn(signInData);\r\n            } else {\r\n                alert(\"You need to input your password (& not only white spaces...) to log in!\");\r\n            }\r\n        } else {\r\n            alert(\"You need to input your email (& not only white spaces...) to log in!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in-page container\">\r\n            <h1>Sign in!</h1>\r\n            <hr />\r\n            <Form\r\n              formClassname=\"sign-in-form\"\r\n              structure={SIGN_IN}\r\n              onSubmit={handleSubmit}\r\n              to=\"/dashboard\"\r\n              text=\"log in\"\r\n            />\r\n        </div>\r\n    );\r\n}","import { useDatabase } from \"../../hooks/use-database\";\r\nimport Form from \"../organisms/Form\";\r\nimport { SIGN_UP } from \"../../initial-data/form-structure-templates\";\r\n\r\nexport default function SignUp() {\r\n\r\n    const { signUp } = useDatabase();\r\n\r\n    function handleSubmit(signUpData) {\r\n        if (\r\n            signUpData.email.replace(/\\s/g, '').length &&\r\n            signUpData.firstName.replace(/\\s/g, '').length &&\r\n            signUpData.lastName.replace(/\\s/g, '').length &&\r\n            signUpData.password.replace(/\\s/g, '').length &&\r\n            signUpData.userName.replace(/\\s/g, '').length\r\n            ) {\r\n                signUp(signUpData);\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to create an account!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-up-page container\">\r\n            <h1>Create account!</h1>\r\n            <hr />\r\n            <Form\r\n                formClassname=\"sign-up-form\"\r\n                structure={SIGN_UP}\r\n                onSubmit={handleSubmit}\r\n                //onSubmit={() => alert(\"I'm currently updating the app according to new database structure & security rules, so you can't create an account at the moment... Sorry, wait a few days!\")}\r\n                to=\"/dashboard\"\r\n                text=\"sign up\"\r\n            />\r\n        </div>\r\n    );\r\n}","export default function About() {\r\n    return (\r\n        <article className=\"about-page\">\r\n            <h1>What you can do with Blogging Platform</h1>\r\n            <hr />\r\n            <p style={{color: \"red\"}}>NOTE: I'm currently updating the app according to new database structure & security rules, so some of features, like: delete an account, blog and article & update user data are off for a few days...</p>\r\n            <ul>\r\n                <li>create & run your blog (or many blogs) after creating a free user account</li>\r\n                <li>write & edit your articles with simple & intuitive <a href=\"https://vadimgierko.github.io/markdown-text-editor/\" rel=\"noreferrer\" target=\"_blank\">markdown text editor</a>, which was also created by myself</li>\r\n                <li>read published blogs without authentication</li>\r\n            </ul>\r\n            <p>Blogging Platform is a responsive full-stack single-page application, which supports all kinds of CRUD features, in which I have used all of my previous knowledge and skills in the field of front-end development (React, Bootstrap) and realtime database integration (Firebase).</p>\r\n            <h3>Technologies used in Blogging Platform development</h3>\r\n            <hr />\r\n            <ul>\r\n                <li>React 17</li>\r\n                <li>React Router 5.2 (HashRouter, dynamic & nested routing)</li>\r\n                <li>React Context</li>\r\n                <li>React Markdown 7 & remark-gfm</li>\r\n                <li>Firebase 9.1 (auth, realtime database, security rules)</li>\r\n                <li>Bootstrap 5.1</li>\r\n                <li>Bootswatch 5.1</li>\r\n                <li>GitHub Pages 3.2</li>\r\n                <li>Atomic Web Design</li>\r\n            </ul>\r\n        </article>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport MarkdownEditor from \"../page-sections/create-article/MarkdownEditor\";\r\nimport { useArticle } from \"../../hooks/use-article\";\r\nimport convertTitleIntoLink from \"../../functions/convertTitleIntoLink\";\r\n\r\nexport default function UpdateArticle() {\r\n\r\n    //const { blogKey } = useParams();\r\n    const { articleKey } = useParams();\r\n\r\n    const { article, fetchArticle, updateArticle } = useArticle();\r\n\r\n    const [updatedArticleData, setUpdatedArticleData] = useState();\r\n\r\n    function handleSubmit() {\r\n        if (\r\n            updatedArticleData.title.replace(/\\s/g, '').length &&\r\n            updatedArticleData.description.replace(/\\s/g, '').length\r\n        ) {\r\n            // set date of update:\r\n            const date = new Date();\r\n            const day = date.getUTCDate();\r\n            const month = date.getUTCMonth() + 1;\r\n            const year = date.getUTCFullYear();\r\n            const updatedAt = year + \".\" + month + \".\" + day;\r\n            // update updatedData with new link & updateAt date:\r\n            let updatedArticleDataWithLink;\r\n            let isLinkChanged = false;\r\n            // update article link in the case if title changed:\r\n            if (article && article.metadata && article.metadata.title !== updatedArticleData.title) {\r\n                isLinkChanged = true;\r\n                const articleLink = convertTitleIntoLink(updatedArticleData.title);\r\n                updatedArticleDataWithLink = {\r\n                    ...updatedArticleData,\r\n                    link: articleLink,\r\n                    updatedAt: updatedAt\r\n                }\r\n            } else {\r\n                updatedArticleDataWithLink = {\r\n                    ...updatedArticleData,\r\n                    updatedAt: updatedAt\r\n                }\r\n            }\r\n            updateArticle(updatedArticleDataWithLink, articleKey, isLinkChanged, isLinkChanged && article.metadata.link);\r\n            setUpdatedArticleData(null);\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to create new article... Try again!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (articleKey) {\r\n            fetchArticle(articleKey);\r\n        }\r\n    }, [articleKey]);\r\n\r\n    useEffect(() => {\r\n        if (article) {\r\n            console.log(\"prev article metadata:\", article.metadata);\r\n            /*\r\n            author: \"Test User\"\r\n            blogKey: \"-MtYRswcLW0tm4F2dcRL\"\r\n            blogTitle: \"New Test Blog\"\r\n            content: \"...article,\\n          author: userPublicData.firstName + \\\" \\\" + userPublicData.lastName,\\n          userName: userPublicData.userName,\\n          userId: user.uid,\\n          blogKey: blogKey,\\n          blogTitle: blogTitle\"\r\n            createdAt: \"2022.1.16\"\r\n            description: \"I hope it would work finally!\"\r\n            link: \"new-test-article\"\r\n            title: \"New Test Article\"\r\n            userId: \"7M5XFfl36vSfhmyAkShjHDFuQnA3\"\r\n            userName: \"testuser\"\r\n            */\r\n            setUpdatedArticleData(article.metadata);\r\n        }\r\n    }, [article]);\r\n\r\n    if (!updatedArticleData) return <p>Downloading article data...</p>\r\n\r\n    return (\r\n        <div className=\"update-article-page container\">\r\n            <form className=\"update-article-form\">\r\n                <h1>Update article!</h1>\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg mb-2\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            defaultValue={updatedArticleData.title}\r\n                            onChange={(e) => setUpdatedArticleData({...updatedArticleData, title: e.target.value})}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg mb-2\">\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            defaultValue={updatedArticleData.description}\r\n                            onChange={(e) => setUpdatedArticleData({...updatedArticleData, description: e.target.value})}\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <hr />\r\n            <MarkdownEditor\r\n                articleData={updatedArticleData}\r\n                setArticleData={setUpdatedArticleData}\r\n            />\r\n            <Link\r\n                to=\"/dashboard/user-blogs\"\r\n                type=\"button\"\r\n                className=\"btn btn-primary mb-3\"\r\n                onClick={handleSubmit}\r\n                //onClick={() => alert(\"I'm currently updating the app according to new database structure & security rules, so you can't update an article at the moment... Sorry, wait a few days!\")}\r\n            >\r\n                Update article\r\n            </Link>   \r\n        </div>\r\n    );\r\n}","import \"./App.css\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./components/organisms/Header\";\r\nimport Blogs from \"./components/pages/Blogs\";\r\nimport Blog from \"./components/pages/Blog\";\r\nimport Dashboard from \"./components/pages/Dashboard\";\r\nimport Bloggers from \"./components/pages/Bloggers\";\r\nimport CreateBlog from \"./components/pages/CreateBlog\";\r\nimport CreateArticle from \"./components/pages/CreateArticle\";\r\nimport Footer from \"./components/organisms/Footer\";\r\nimport Blogger from \"./components/pages/Blogger\";\r\nimport { useDatabase } from \"./hooks/use-database\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Article from \"./components/pages/Article\";\r\nimport SignIn from \"./components/pages/SignIn\";\r\nimport SignUp from \"./components/pages/SignUp\";\r\nimport About from \"./components/pages/About\";\r\nimport UpdateArticle from \"./components/pages/UpdateArticle\";\r\n\r\nexport default function App() {\r\n\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const { user, userPublicData, logOut } = useDatabase();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setUserId(user.uid);\r\n    } else {\r\n      setUserId(null);\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header \r\n        userFirstName={user && userPublicData ? userPublicData.firstName : null}\r\n        userLastName={user && userPublicData ? userPublicData.lastName : null}\r\n        logOut={logOut} \r\n      />\r\n      <main className=\"container\" style={{ marginTop: 120 }}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <SignIn />\r\n          </Route>\r\n          <Route path=\"/signup\">\r\n            <SignUp />\r\n          </Route>\r\n          <Route path=\"/dashboard\">\r\n            <Dashboard userId={userId} />\r\n          </Route>\r\n          <Route path=\"/blogs/:blogLink/:articleLink\">\r\n            <Article />\r\n          </Route>\r\n          <Route path=\"/blogs/:blogLink\">\r\n            <Blog />\r\n          </Route>\r\n          <Route path=\"/blogs\">\r\n            <Blogs />\r\n          </Route>\r\n          <Route path=\"/bloggers/:userName\">\r\n            <Blogger />\r\n          </Route>\r\n          <Route path=\"/bloggers\">\r\n            <Bloggers />\r\n          </Route>\r\n          <Route path=\"/create-blog\">\r\n            <CreateBlog />\r\n          </Route>\r\n          <Route path=\"/create-article/:blogKey/:blogTitle\">\r\n            <CreateArticle />\r\n          </Route>\r\n          <Route path=\"/edit-article/:blogKey/:articleKey\">\r\n            <UpdateArticle />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"bootswatch/dist/lux/bootstrap.min.css\"\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { DatabaseProvider } from \"./hooks/use-database\";\r\nimport { BlogProvider } from \"./hooks/use-blog\";\r\nimport { ArticleProvider } from \"./hooks/use-article\";\r\nimport { BloggerProvider } from \"./hooks/use-blogger\";\r\nimport { ListsProvider } from \"./hooks/use-lists\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <DatabaseProvider>\r\n        <BlogProvider>\r\n          <ArticleProvider>\r\n            <BloggerProvider>\r\n              <ListsProvider>\r\n                <App />\r\n              </ListsProvider>\r\n            </BloggerProvider>\r\n          </ArticleProvider>\r\n        </BlogProvider>\r\n      </DatabaseProvider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}