{"version":3,"sources":["firebase.js","hooks/use-database.js","components/Header.js","components/Home.js","components/BlogsListPage.js","components/ArticleView.js","components/BlogPage.js","components/SignInForm.js","components/SignUpForm.js","components/UserDataFormInDashboard.js","functions/convertTitleIntoLink.js","components/BlogEditionForm.js","components/UserBlogsListInDashboard.js","components/Dashboard.js","components/BloggersList.js","components/CreateBlogForm.js","components/MarkdownEditor.js","components/CreateArticlePage.js","components/Footer.js","components/BloggerPage.js","components/UpdateArticlePage.js","App.js","reportWebVitals.js","index.js"],"names":["app","getApp","e","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseAuth","getAuth","database","getDatabase","DatabaseContext","createContext","useDatabase","useContext","DatabaseProvider","children","useState","user","setUser","userData","setUserData","blogs","setBlogs","bloggers","setBloggers","useEffect","onAuthStateChanged","userDataRef","ref","uid","onValue","snapshot","data","val","console","log","blogsRef","bloggersRef","value","signIn","email","password","signInWithEmailAndPassword","then","userCredential","catch","error","alert","message","signUp","signUpData","createUserWithEmailAndPassword","set","firstName","lastName","userName","logOut","signOut","updateUserData","deleteBlog","blogKey","remove","addBlog","blogData","newBlogKey","push","child","key","author","userId","updateBlog","updatedBlogData","addArticle","blogTitle","article","newArticleKey","deleteArticle","articleKey","updateArticle","updatedArticleData","deleteUserAccount","userForDelete","currentUser","userIdForDelete","userBlogsForDelete","Object","entries","filter","blog","length","userBlogsKeysForDelete","i","n","confirm","deleteUser","Provider","Header","isNavCollapsed","setIsNavCollapsed","handleNavCollapse","setCurrentUser","className","to","type","onClick","id","style","textDecoration","Home","href","rel","target","BlogsListPage","blogsList","setBlogsList","map","blogLink","title","description","ArticleView","articleLink","useParams","setArticle","currentBlog","find","currentArticle","articles","newestArticle","createdAt","updatedAt","content","remarkPlugins","remarkGfm","BlogPage","useRouteMatch","path","url","setBlog","currentBlogArray","exact","SignInForm","userSignInData","setUserSignInData","placeholder","onChange","replace","SignUpForm","userSignUpData","setUserSignUpData","toLowerCase","UserDataFormInDashboard","currentUserData","setCurrentUserData","defaultValue","convertTitleIntoLink","BlogEditionForm","setBlogKey","currentBlogKey","width","UserBlogsListInDashboard","userBlogs","setUserBlogs","currentUserBLogs","Dashboard","BloggersList","bloggersList","setBloggersList","blogger","bloggerId","bloggerData","CreateBlogForm","Array","newBlogData","setNewBlogData","newBlogDataWithLink","MarkdownEditor","articleData","setArticleData","marginBottom","height","CreateArticlePage","newArticleData","setNewArticleData","required","date","Date","day","getUTCDate","month","getUTCMonth","getUTCFullYear","newArticleDataWithLink","Footer","display","BloggerPage","setBlogger","bloggerBlogs","setBloggerBlogs","blogsArray","UpdateArticlePage","setUpdatedArticleData","updatedArticleDataWithLink","App","setUserId","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cad1d79.chunk.js","sourcesContent":["import { initializeApp, getApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase } from \"firebase/database\";\r\n//import { getAnalytics } from \"firebase/analytics\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCDziv5T2lwy_1jcHriik2c9hWd1qPcY_s\",\r\n  authDomain: \"blogging-platform-4ebc2.firebaseapp.com\",\r\n  databaseURL: \"https://blogging-platform-4ebc2-default-rtdb.firebaseio.com\",\r\n  projectId: \"blogging-platform-4ebc2\",\r\n  storageBucket: \"blogging-platform-4ebc2.appspot.com\",\r\n  messagingSenderId: \"669118367342\",\r\n  appId: \"1:669118367342:web:0348ae0115ae90740dc87f\",\r\n  measurementId: \"G-PQXT1EE1GJ\"\r\n};\r\n\r\n// Initialize Firebase\r\nlet app;\r\ntry {\r\n  app = getApp();\r\n} catch (e) {\r\n  app = initializeApp(firebaseConfig);\r\n}\r\n\r\nexport const firebaseAuth = getAuth(app);\r\nexport const database = getDatabase(app);\r\n//const analytics = getAnalytics(firebaseApp);","//import { ref as storageRef, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\n\r\nimport { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { firebaseAuth, database } from \"../firebase\"; // + , storage\r\n\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n  deleteUser\r\n} from \"firebase/auth\";\r\n\r\nimport {\r\n    ref,\r\n    set,\r\n    push,\r\n    child,\r\n    //update,\r\n    onValue,\r\n    remove\r\n} from \"firebase/database\";\r\n\r\nconst DatabaseContext = createContext();\r\n\r\nexport const useDatabase = () => useContext(DatabaseContext);\r\n\r\nexport function DatabaseProvider({ children }) {\r\n\r\n  const [user, setUser] = useState(null);\r\n  const [userData, setUserData] = useState(null);\r\n  const [blogs, setBlogs] = useState(null);\r\n  const [bloggers, setBloggers] = useState(null);\r\n\r\n  const signIn = (email, password) => {\r\n    return signInWithEmailAndPassword(firebaseAuth, email, password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        setUser(userCredential.user);\r\n        console.log(\"user is signed in\");\r\n        return userCredential.user;\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const signUp = (signUpData) => {\r\n    return createUserWithEmailAndPassword(firebaseAuth, signUpData.email, signUpData.password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        setUser(userCredential.user);\r\n        console.log(\"user is sign up. userCredential.user: \", userCredential.user);\r\n        // create user in database with signUpData:\r\n        set(ref(database, \"users/\" + userCredential.user.uid), {\r\n          firstName: signUpData.firstName,\r\n          lastName: signUpData.lastName,\r\n          userName: signUpData.userName,\r\n          email: signUpData.email,\r\n        });\r\n        //return userCredential.user;\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const logOut = () => {\r\n    return signOut(firebaseAuth)\r\n      .then(() => {\r\n        setUser(null);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n  \r\n  const updateUserData = (userData) => {\r\n    set(ref(database, \"users/\" + user.uid), {\r\n      ...userData\r\n    });\r\n  };\r\n\r\n  const addBlog = (blogData) => {\r\n\r\n    const newBlogKey = push(child(ref(database), \"blogs\")).key;\r\n\r\n    if (newBlogKey) {\r\n      set(ref(database, \"blogs/\" + newBlogKey), {\r\n        ...blogData,\r\n        author: userData.firstName + \" \" + userData.lastName,\r\n        userName: userData.userName,\r\n        userId: user.uid,\r\n      });\r\n    }\r\n  }\r\n\r\n  const deleteBlog = (blogKey) => {\r\n    remove(ref(database, \"blogs/\" +  blogKey)).then(() => {\r\n      console.log(\"blog \" + blogKey + \" was deleted\");\r\n    }).catch((error) => {\r\n      // An error ocurred\r\n      console.log(error.message);\r\n    });\r\n  }\r\n\r\n  const updateBlog = (blogKey, updatedBlogData) => {\r\n    set(ref(database, \"blogs/\" + blogKey), {\r\n      ...updatedBlogData\r\n    });\r\n  };\r\n\r\n  const addArticle = (blogKey, blogTitle, article) => {\r\n\r\n    const newArticleKey = push(child(ref(database), \"blogs/\" + blogKey + \"/articles/\")).key;\r\n\r\n    if (newArticleKey) {\r\n      set(ref(database, \"blogs/\" + blogKey + \"/articles/\" + newArticleKey), {\r\n        ...article,\r\n        author: userData.firstName + \" \" + userData.lastName,\r\n        userName: userData.userName,\r\n        userId: user.uid,\r\n        blogKey: blogKey,\r\n        blogTitle: blogTitle\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateArticle = (blogKey, articleKey, updatedArticleData) => {\r\n    if (updatedArticleData) {\r\n      set(ref(database, \"blogs/\" + blogKey + \"/articles/\" + articleKey), {\r\n        ...updatedArticleData\r\n      });\r\n    } else {\r\n      alert(\"There is no data to update... The article isn't updated.\");\r\n    }\r\n  }\r\n\r\n  const deleteArticle = (blogKey, articleKey) => {\r\n    remove(ref(database, \"blogs/\" +  blogKey + \"/articles/\" + articleKey)).then(() => {\r\n      console.log(\"article \" + articleKey + \" in blog \" + blogKey + \" was deleted\");\r\n    }).catch((error) => {\r\n      console.log(error.message);\r\n    });\r\n  }\r\n\r\n  const deleteUserAccount = () => {\r\n    console.log(\"deleteUser operations:\");\r\n    const userForDelete = firebaseAuth.currentUser;\r\n    console.log(\"userForDelete:\", userForDelete);\r\n    const userIdForDelete = userForDelete.uid;\r\n    console.log(\"userIdForDelete:\", userIdForDelete);\r\n\r\n    if (userForDelete && userIdForDelete) {\r\n      // 1. delete user data first:\r\n      remove(ref(database, \"users/\" + userForDelete.uid)).then(() => {\r\n        console.log(\"User data of deleted user \" + userIdForDelete + \" was deleted...\");\r\n      }).catch((error) => {\r\n        // An error ocurred\r\n        alert(error.message);\r\n      });\r\n      \r\n      // 2. delete user blogs in for loop:\r\n      const userBlogsForDelete = Object.entries(blogs).filter(blog => blog[1].userId === userIdForDelete);\r\n      console.log(\"userBlogsForDelete:\", userBlogsForDelete);\r\n      if (userBlogsForDelete && userBlogsForDelete.length) {\r\n        let userBlogsKeysForDelete = [];\r\n        for (let i = 0; i < userBlogsForDelete.length; i++) {\r\n          const key = userBlogsForDelete[i][0];\r\n          userBlogsKeysForDelete.push(key);\r\n        }\r\n        console.log(\"userBlogsKeysForDelete:\", userBlogsKeysForDelete);\r\n        if (userBlogsKeysForDelete && userBlogsKeysForDelete.length) {\r\n          for (let n = 0; n < userBlogsKeysForDelete.length; n++) {\r\n            const key = userBlogsKeysForDelete[n];\r\n            remove(ref(database, \"blogs/\" + key)).then(() => {\r\n              console.log(\"Blog \" + key + \" of deleted user \" + userIdForDelete + \" was deleted...\");\r\n              // 2. delete user in the last loop\r\n              if (n === userBlogsKeysForDelete.length - 1) {\r\n                // eslint-disable-next-line no-restricted-globals\r\n                const confirmAccountDeletion = confirm(\"Your blogs & user data was deleted. Now press OK to delete your account\");\r\n                if (confirmAccountDeletion) {\r\n                  deleteUser(userForDelete).then(() => {\r\n                    console.log(\"User \" + userIdForDelete + \" was deleted.\");\r\n                  }).catch((error) => {\r\n                    alert(error.message, \"Try again to delete your account. Your blogs & user data were already deleted.\");\r\n                  });\r\n                }\r\n              }\r\n            }).catch((error) => {\r\n              // An error ocurred\r\n              alert(error.message);\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"There are no user blogs to delete... So delete user.\");\r\n          // eslint-disable-next-line no-restricted-globals\r\n          const confirmAccountDeletion = confirm(\"Your blogs & user data was deleted. Now press OK to delete your account\");\r\n          if (confirmAccountDeletion) {\r\n            deleteUser(userForDelete).then(() => {\r\n              console.log(\"User \" + userIdForDelete + \" was deleted.\");\r\n            }).catch((error) => {\r\n              alert(error.message, \"Try again to delete your account. Your blogs & user data were already deleted.\");\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        console.log(\"There are no user blogs to delete... So delete user.\");\r\n        // eslint-disable-next-line no-restricted-globals\r\n        const confirmAccountDeletion = confirm(\"Your blogs & user data was deleted. Now press OK to delete your account\");\r\n        if (confirmAccountDeletion) {\r\n          deleteUser(userForDelete).then(() => {\r\n            console.log(\"User \" + userIdForDelete + \" was deleted.\");\r\n          }).catch((error) => {\r\n            alert(error.message, \"Try again to delete your account. Your blogs & user data were already deleted.\");\r\n          });\r\n        }\r\n      }  \r\n    } else {\r\n      alert(\"You need to be signed in to delete your account. Try again!\")\r\n    }\r\n  }\r\n\r\n  //   const getProfileImageURL = (profileImageRef) => {\r\n  //     // get profile img url to users data:\r\n  //     getDownloadURL(storageRef(storage, profileImageRef))\r\n  //     .then((url) => {\r\n  //       updateUserData({...userData, profileImageURL: url})\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error.message);\r\n  //     });\r\n  //   }\r\n\r\n  //   const uploadProfileImage = (image) => {\r\n  //     // Create a reference to 'profileImage.jpg'\r\n  //     const profileImageRef = storageRef(storage, `images/profileImages/${user.uid}/profileImg.png`);\r\n\r\n  //     uploadBytes(profileImageRef, image).then((snapshot) => {\r\n  //         if (snapshot) {\r\n  //           getProfileImageURL(profileImageRef);\r\n  //         } else {\r\n  //           console.log(\"file is not uploaded yet...\")\r\n  //         }\r\n  //     });\r\n  //   };\r\n\r\n  //   const getItemImageURL = (itemImageRef, itemKey, item) => {\r\n  //     getDownloadURL(storageRef(storage, itemImageRef))\r\n  //     .then((url) => {\r\n  //       console.log(\"img url\", url);\r\n  //       const updatedItem = {\r\n  //         ...item,\r\n  //         itemImageURL: url\r\n  //       }\r\n  //       updateItem(updatedItem, itemKey);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error.message);\r\n  //     });\r\n  //   }\r\n\r\n  //   const uploadItemImage = (image, itemKey, item) => {\r\n  //     const itemImageRef = storageRef(storage, `images/itemsImages/${user.uid}/${itemKey}/itemImg.png`);\r\n\r\n  //     uploadBytes(itemImageRef, image).then((snapshot) => {\r\n  //         if (snapshot) {\r\n  //           getItemImageURL(itemImageRef, itemKey, item);\r\n  //         } else {\r\n  //           console.log(\"file is not uploaded yet...\")\r\n  //         }\r\n  //     });\r\n  //   }\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(firebaseAuth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n\r\n        const userDataRef = ref(database, `users/${user.uid}`);\r\n        onValue(userDataRef, (snapshot) => {\r\n            const data = snapshot.val();\r\n            if (data) {\r\n                setUserData(data);\r\n            } else {\r\n                console.log(\"there are no user data...\");\r\n            }\r\n        });\r\n      } else {\r\n        setUser(null);\r\n        setUserData(null);\r\n        console.log(\"user is logged out\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // fetch blogs & bloggers list every time, regardless of whether the user is logged or not:\r\n  useEffect(() => {\r\n\r\n    //fetch blogs list\r\n    const blogsRef = ref(database, \"blogs/\");\r\n    onValue(blogsRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        setBlogs(data);\r\n        //console.log(\"blogs:\", data)\r\n      } else {\r\n        console.log(\"there are no blogs\");\r\n      }\r\n    });\r\n\r\n    //fetch bloggers list\r\n    const bloggersRef = ref(database, `users/`);\r\n    onValue(bloggersRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        setBloggers(data);\r\n        //console.log(\"bloggers:\", data)\r\n      } else {\r\n        console.log(\"there are no bloggers...\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    signIn,\r\n    signUp,\r\n    logOut,\r\n    user,\r\n    userData,\r\n    updateUserData,\r\n    blogs,\r\n    deleteBlog,\r\n    bloggers,\r\n    addBlog,\r\n    updateBlog,\r\n    addArticle,\r\n    deleteArticle,\r\n    updateArticle,\r\n    deleteUserAccount\r\n    //uploadProfileImage,\r\n    //uploadItemImage\r\n  }\r\n\r\n  return (\r\n    <DatabaseContext.Provider value={value} >{children}</DatabaseContext.Provider>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { useDatabase } from \"../hooks/use-database\";\r\n\r\nexport default function Header() {\r\n    const { user, logOut } = useDatabase();\r\n\r\n    const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n    \r\n    const handleNavCollapse = () => {\r\n        setIsNavCollapsed(!isNavCollapsed);\r\n    };\r\n\r\n    const [currentUser, setCurrentUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setCurrentUser(user)\r\n        } else {\r\n            setCurrentUser(null);\r\n        }\r\n    }, [user])\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Blogging Platform</Link>\r\n                <button\r\n                    className=\"navbar-toggler collapsed\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarColor01\"\r\n                    aria-controls=\"navbarColor01\"\r\n                    aria-expanded={isNavCollapsed ? true : false}\r\n                    aria-label=\"Toggle navigation\"\r\n                    onClick={handleNavCollapse}\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className={`${isNavCollapsed ? \"collapse\" : null} navbar-collapse`} id=\"navbarColor01\">\r\n                    <ul className=\"navbar-nav me-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                className=\"nav-link\"\r\n                                to=\"/\"\r\n                                onClick={isNavCollapsed ? null : () => handleNavCollapse() }\r\n                            >Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                className=\"nav-link\"\r\n                                to=\"/blogs\"\r\n                                onClick={isNavCollapsed ? null : () => handleNavCollapse() }\r\n                            >Blogs</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                className=\"nav-link\"\r\n                                to=\"/bloggers\"\r\n                                onClick={isNavCollapsed ? null : () => handleNavCollapse() }\r\n                            >Bloggers</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div>\r\n                        {\r\n                            currentUser ?\r\n                                <>\r\n                                    <Link\r\n                                        to=\"/dashboard\"\r\n                                        className=\"text-light text-muted\"\r\n                                        style={{textDecoration: \"none\"}}\r\n                                        onClick={() => {\r\n                                            if (!isNavCollapsed) {\r\n                                                handleNavCollapse();\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <span className=\"me-2\"><i className=\"bi bi-person-circle\"></i></span>\r\n                                        <span className=\"me-4\">{currentUser.email}</span>\r\n                                    </Link>\r\n                                    <Link\r\n                                        type=\"button\"\r\n                                        to=\"/\"\r\n                                        className={isNavCollapsed ? \"btn btn-outline-danger me-2\" : \"btn btn-outline-danger me-2 d-block\"}\r\n                                        onClick={() => {\r\n                                            logOut();\r\n                                            if (!isNavCollapsed) {\r\n                                                handleNavCollapse();\r\n                                            }\r\n                                        }}\r\n                                    >Log out</Link>\r\n                                </>\r\n                            :\r\n                                <>\r\n                                    <Link\r\n                                        type=\"button\"\r\n                                        to=\"/login\"\r\n                                        className={isNavCollapsed ? \"btn btn-outline-success me-2\" : \"btn btn-outline-success me-2 d-block mb-3\"}\r\n                                        onClick={isNavCollapsed ? null : () => handleNavCollapse() }\r\n                                    >Log in</Link>\r\n                                    <Link\r\n                                        type=\"button\"\r\n                                        to=\"/signup\"\r\n                                        className={isNavCollapsed ? \"btn btn-outline-info me-2\" : \"btn btn-outline-info me-2 d-block\"}\r\n                                        onClick={isNavCollapsed ? null : () => handleNavCollapse() }\r\n                                    >Create account</Link>\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}","export default function Home() {\r\n    return (\r\n        <div>\r\n            <h1>About</h1>\r\n            <hr />\r\n            <p>This is my newest, most complex & advanced responsive full-stack single-page application, which supports all kinds of CRUD features, in which I have used all of my previous knowledge and skills in the field of front-end development (React, Bootstrap) and realtime database integration (Firebase).</p>\r\n            <hr />\r\n            <h3>Blogging Platform allows you to:</h3>\r\n            <ul>\r\n                <li>create & run your blog (or many blogs) for free after creating a free user account</li>\r\n                <li>write & edit your articles with simple & intuitive <a href=\"https://vadimgierko.github.io/markdown-text-editor/\" rel=\"noreferrer\" target=\"_blank\">markdown text editor</a>, which was also created by myself</li>\r\n                <li>read published blogs without authentication</li>\r\n            </ul>\r\n            <h3>Technologies used in building Blogging Platform:</h3>\r\n            <hr />\r\n            <ul>\r\n                <li>React 17</li>\r\n                <li>React Router 5.2 (HashRouter, dynamic & nested routing)</li>\r\n                <li>React Context</li>\r\n                <li>React Markdown 7 & remark-gfm</li>\r\n                <li>Firebase 9.1 (authentication, realtime database, security rules)</li>\r\n                <li>Bootstrap 5.1</li>\r\n                <li>Bootswatch 5.1</li>\r\n                <li>GitHub Pages 3.2 (hosting)</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\n\r\nexport default function BlogsListPage() {\r\n\r\n    const { blogs } = useDatabase();\r\n\r\n    const [blogsList, setBlogsList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (blogs) {\r\n            setBlogsList(Object.entries(blogs));\r\n            console.log(blogs)\r\n        }\r\n    }, [blogs]);\r\n\r\n    return (\r\n        <div className=\"BlogsList\">\r\n            <div>\r\n                <h1>Blogs</h1>\r\n                <hr />\r\n                { blogsList && blogsList.length ? (\r\n                    blogsList.map((blog) => \r\n                        <div key={blog[0]}>\r\n                            <Link to={\"blogs/\" + blog[1].blogLink}>\r\n                                <h3>{blog[1].title}</h3>\r\n                            </Link>\r\n                            <p>\r\n                                by\r\n                                <Link to={\"bloggers/\" + blog[1].userName} className=\"ms-2\">\r\n                                    {blog[1].author}\r\n                                </Link>\r\n                            </p>\r\n                            <p>{blog[1].description}</p>\r\n                            <hr />\r\n                        </div>\r\n                    )) : (\r\n                        <p>Downloading blogs or... there is no blogs...</p>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\n\r\nexport default function ArticleView() {\r\n\r\n    const { articleLink } = useParams();\r\n    const { blogLink } = useParams();\r\n    const { blogs } = useDatabase();\r\n    const [article, setArticle] = useState(null);\r\n\r\n    useEffect(() => {\r\n        \r\n        if (blogs) {\r\n            const currentBlog = Object.entries(blogs).find(blog => blog[1].blogLink === blogLink)[1];\r\n            console.log(\"currentBlog:\", currentBlog);\r\n            if (articleLink) {\r\n                const currentArticle = Object.entries(currentBlog.articles).find(article => article[1].articleLink === articleLink)[1];\r\n                setArticle(currentArticle);\r\n            } else {\r\n                // if no article link = blogs/current-blog-page\r\n                // show the last (the newest) article\r\n                const articles = currentBlog.articles ? Object.entries(currentBlog.articles) : null;\r\n                if (articles && articles.length) {\r\n                    const newestArticle = articles[articles.length - 1][1];\r\n                    console.log(\"newestArticle:\", newestArticle)\r\n                    setArticle(newestArticle);\r\n                } else {\r\n                    console.log(\"there are no articles\")\r\n                }\r\n            }\r\n        }\r\n    }, [blogs, blogLink, articleLink]);\r\n\r\n    return (\r\n        <div className=\"col-8\">\r\n            {\r\n                article ? (\r\n                    <div>\r\n                        <h1>{article.title}</h1>\r\n                        <p><em>Published:</em> {article.createdAt ? article.createdAt : (article.updatedAt ? article.updatedAt : \"article was published before createdAt function came up ;-)\")}</p>\r\n                        <p><em>Updated:</em> {article.updatedAt ? article.updatedAt : article.createdAt}</p>\r\n                        <p><em>Description:</em> {article.description}</p>\r\n                        <hr />\r\n                        <ReactMarkdown children={article.content} remarkPlugins={[remarkGfm]} />\r\n                    </div>\r\n                ) : (\r\n                    <p>There are no articles or downloading article...</p>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\nimport { Link, Switch, Route, useRouteMatch, useParams } from \"react-router-dom\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport ArticleView from \"./ArticleView\";\r\n\r\nexport default function BlogPage() {\r\n\r\n    let {path, url} = useRouteMatch();\r\n    const { blogLink } = useParams();\r\n\r\n    const { blogs } = useDatabase();\r\n\r\n    const [blog, setBlog] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (blogs) {\r\n            const fetchedBlogs = Object.entries(blogs);\r\n            const currentBlogArray = fetchedBlogs.filter(blog => blog[1].blogLink === blogLink); // array...\r\n            const currentBlog = currentBlogArray[0][1];\r\n            setBlog(currentBlog);\r\n        } else {\r\n            console.log(\"there are no blogs or blogLink in BlogPage ...\")\r\n        }\r\n    }, [blogs, blogLink]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                blog ? (\r\n                    <div>\r\n                        <div className=\"text-center\">\r\n                            <h1>{blog.title}</h1>\r\n                            <p>\r\n                                by\r\n                                <Link to={\"/bloggers/\" + blog.userName} className=\"ms-2\">\r\n                                    {blog.author}\r\n                                </Link>\r\n                            </p>\r\n                            <p>{blog.description}</p>\r\n                        </div>\r\n                        <hr />\r\n                        {\r\n                            blog.articles ? (\r\n                            \r\n                                <div className=\"row\">\r\n                                    <Switch>\r\n                                        <Route exact path={path}>\r\n                                            <ArticleView />\r\n                                        </Route>\r\n                                        <Route exact path={path + \"/:articleLink\"}>\r\n                                            <ArticleView />\r\n                                        </Route>\r\n                                    </Switch>\r\n                                    <div className=\"col-4\">\r\n                                        <h5>Table of content</h5>\r\n                                        <hr />\r\n                                        <ul>\r\n                                            {\r\n                                                Object.entries(blog.articles).map((article) =>\r\n                                                    <li key={article[0]}>\r\n                                                        <Link\r\n                                                            to={url + \"/\" + article[1].articleLink}\r\n                                                            className=\"d-block\"\r\n                                                        >{article[1].title}</Link>\r\n                                                    </li>\r\n                                                )\r\n                                            }\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                <div>\r\n                                    <p>There are no articles yet...</p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                ) : (\r\n                    <div>Downloading data...</div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useDatabase } from \"../hooks/use-database\";\r\n\r\nexport default function SignInForm() {\r\n\r\n    const { signIn } = useDatabase();\r\n\r\n    const [userSignInData, setUserSignInData] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Sign in!</h1>\r\n            <hr />\r\n            <form>\r\n                <div className=\"row mb-3\">\r\n                    <div className=\"mb-2\">\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"email\"\r\n                            aria-label=\"email\"\r\n                            onChange={(e) => setUserSignInData({...userSignInData, email: e.target.value})}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"password\"\r\n                            aria-label=\"password\"\r\n                            onChange={(e) => setUserSignInData({...userSignInData, password: e.target.value})}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Link\r\n                    to=\"/dashboard\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary mb-3\"\r\n                    onClick={() => {\r\n                        if (userSignInData.email.replace(/\\s/g, '').length) {\r\n                            if (userSignInData.password.replace(/\\s/g, '').length) {\r\n                                signIn(userSignInData.email, userSignInData.password);\r\n                            } else {\r\n                                alert(\"You need to input your password (& not only white spaces...) to log in!\");\r\n                            }\r\n                        } else {\r\n                            alert(\"You need to input your email (& not only white spaces...) to log in!\");\r\n                        }\r\n                    }}\r\n                >\r\n                    Log in\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useDatabase } from \"../hooks/use-database\";\r\n\r\nexport default function SignUpForm() {\r\n\r\n    const { signUp } = useDatabase();\r\n\r\n    const [userSignUpData, setUserSignUpData] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form>\r\n                <h1>Create account!</h1>\r\n                <hr />\r\n                <div className=\"mb-2\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Your real first name\"\r\n                        onChange={(e) => setUserSignUpData({...userSignUpData, firstName: e.target.value})}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Your real last name\"\r\n                        onChange={(e) => setUserSignUpData({...userSignUpData, lastName: e.target.value})}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"user name (lower case letters only!)\"\r\n                        onChange={(e) => setUserSignUpData({...userSignUpData, userName: e.target.value.toLowerCase()})}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"email\"\r\n                        aria-label=\"email\"\r\n                        onChange={(e) => setUserSignUpData({...userSignUpData, email: e.target.value})}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"password\"\r\n                        aria-label=\"password\"\r\n                        onChange={(e) => setUserSignUpData({...userSignUpData, password: e.target.value})}\r\n                    />\r\n                </div>\r\n                \r\n                <Link\r\n                    to=\"/dashboard\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary mb-3\"\r\n                    onClick={() => {\r\n                        if (\r\n                            userSignUpData.email.replace(/\\s/g, '').length &&\r\n                            userSignUpData.firstName.replace(/\\s/g, '').length &&\r\n                            userSignUpData.lastName.replace(/\\s/g, '').length &&\r\n                            userSignUpData.password.replace(/\\s/g, '').length &&\r\n                            userSignUpData.userName.replace(/\\s/g, '').length\r\n                            ) {\r\n                                signUp(userSignUpData);\r\n                        } else {\r\n                            alert(\"You need to complete all input fields (not only white spaces...) to create an account!\");\r\n                        }\r\n                    }}\r\n                >\r\n                    Create account\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\n\r\nexport default function UserDataFormInDashboard() {\r\n\r\n    const { user, userData, updateUserData, deleteUserAccount } = useDatabase();\r\n    \r\n    const [currentUserData, setCurrentUserData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (userData) {\r\n            setCurrentUserData(userData);\r\n        } else {\r\n            setCurrentUserData(null);\r\n        }\r\n    }, [userData]);\r\n\r\n    // function deleteAccount(userId) {\r\n    //     const user = auth.currentUser;\r\n\r\n    //     deleteUser(user).then(() => {\r\n    //         // User deleted\r\n    //         console.log(\"user\", user.uid, \"account was deleted\");\r\n    //         remove(ref(database, 'users/' + userId));\r\n    //     }).catch((error) => {\r\n    //         // An error ocurred\r\n    //         console.log(error.message);\r\n    //     });\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n            {\r\n                user && currentUserData ? (\r\n                    <form>\r\n                        <div className=\"mb-2\">\r\n                            <p>Your real first name:</p>\r\n                            <input\r\n                                type=\"input\"\r\n                                className=\"form-control\"\r\n                                defaultValue={currentUserData ? currentUserData.firstName : null }\r\n                                onChange={(e) => setCurrentUserData({...currentUserData, firstName: e.target.value})}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <p>Your real last name:</p>\r\n                            <input\r\n                                type=\"input\"\r\n                                className=\"form-control\"\r\n                                defaultValue={currentUserData ? currentUserData.lastName : null}\r\n                                onChange={(e) => setCurrentUserData({...currentUserData, lastName: e.target.value})}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <p>Your user name:</p>\r\n                            <input\r\n                                type=\"input\"\r\n                                className=\"form-control\"\r\n                                defaultValue={currentUserData ? currentUserData.userName : null}\r\n                                onChange={(e) => setCurrentUserData({...currentUserData, userName: e.target.value})}\r\n                            />\r\n                        </div>\r\n                        <Link\r\n                            to=\"/dashboard\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-success d-block mb-3\"\r\n                            onClick={() => {\r\n                                if (\r\n                                    currentUserData.firstName.replace(/\\s/g, '').length &&\r\n                                    currentUserData.lastName.replace(/\\s/g, '').length &&\r\n                                    currentUserData.userName.replace(/\\s/g, '').length\r\n                                ) {\r\n                                    updateUserData(currentUserData);\r\n                                } else {\r\n                                    alert(\"You need to complete all input fields (not only white spaces...) to update your account data!\");\r\n                                } \r\n                            }}\r\n                        >Save changes</Link>\r\n                        <Link\r\n                            to=\"/dashboard\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-danger d-block mb-3\"\r\n                            onClick={() => {\r\n                                // eslint-disable-next-line no-restricted-globals\r\n                                const wantToDelete = confirm(\"Are you sure, you want to delete your account & your articles forever? There's no turning back... Delete account?\");\r\n                                if (wantToDelete) {\r\n                                    //alert(\"Sorry, for a moment there are no delete account function in this app... Please, contact to the owner of this app to delete your account manually.\");\r\n                                    deleteUserAccount();\r\n                                }\r\n                            }}\r\n                        >Delete my account</Link>\r\n                    </form>\r\n                ) : (\r\n                    <div>\r\n                        <h2>Downloading data or there is no data...</h2>\r\n                        <Link\r\n                            to=\"/dashboard\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-danger d-block mb-3\"\r\n                            onClick={() => {\r\n                                // eslint-disable-next-line no-restricted-globals\r\n                                const wantToDelete = confirm(\"Are you sure, you want to delete your account & your articles forever? There's no turning back... If you want to delete your account, press OK & delete your blogs & user Data at first.\");\r\n                                if (wantToDelete) {\r\n                                    //alert(\"Sorry, for a moment there are no delete account function in this app... Please, contact to the owner of this app to delete your account manually.\");\r\n                                    deleteUserAccount();\r\n                                }\r\n                            }}\r\n                        >Delete my account</Link>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\n/*=======  EMAIL CHANGING DELETED UNTIL THERE WILL BE A FUNCTION FOR IT ======\r\n<div className=\"mb-2\">\r\n    <p>Your email:</p>\r\n    <input\r\n        type=\"input\"\r\n        className=\"form-control\"\r\n        defaultValue={currentUserData ? currentUserData.email : null}\r\n        onChange={(e) => setCurrentUserData({...currentUserData, email: e.target.value})}\r\n    />\r\n</div>\r\n*/","export default function convertTitleIntoLink(title) {\r\n    return (title.replace(/ /g, \"-\").toLowerCase());\r\n}","import { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport convertTitleIntoLink from \"../functions/convertTitleIntoLink\";\r\n\r\nexport default function BlogEditionForm() {\r\n\r\n    const { blogLink } = useParams();\r\n\r\n    const { blogs, deleteBlog, updateBlog, deleteArticle } = useDatabase();\r\n\r\n    const [blog, setBlog] = useState(null);\r\n    const [blogKey, setBlogKey] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (blogs) {\r\n            const fetchedBlogs = Object.entries(blogs);\r\n            const currentBlogArray = fetchedBlogs.filter(blog => blog[1].blogLink === blogLink); // array...\r\n            const currentBlog = currentBlogArray[0][1];\r\n            const currentBlogKey = currentBlogArray[0][0];\r\n            setBlog(currentBlog);\r\n            setBlogKey(currentBlogKey);\r\n        } else {\r\n            console.log(\"there are no blogs or blogLink in BlogPage ...\")\r\n        }\r\n    }, [blogs, blogLink]);\r\n\r\n    if (blog) {\r\n        return (\r\n            <div className=\"BlogEditionForm row\">\r\n                <div className=\"col-lg\">\r\n                    <form>\r\n                        <div className=\"mb-2\">\r\n                            <h4 className=\"text-center\">Blog</h4>\r\n                            <hr />\r\n                            <p>Blog title</p>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                defaultValue={blog.title}\r\n                                onChange={(e) => setBlog({...blog, title: e.target.value, blogLink: convertTitleIntoLink(e.target.value)})}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <p>Blog description</p>\r\n                            <textarea\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                defaultValue={blog.description}\r\n                                onChange={(e) => setBlog({...blog, description: e.target.value})}\r\n                            />\r\n                        </div>\r\n                        <Link\r\n                            to=\"/dashboard/user-blogs\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-success mb-3 d-block\"\r\n                            style={{width: \"100%\"}}\r\n                            onClick={() => {\r\n                                if (\r\n                                    blog.title.replace(/\\s/g, '').length &&\r\n                                    blog.description.replace(/\\s/g, '').length\r\n                                ) {\r\n                                    updateBlog(blogKey, blog);\r\n                                } else {\r\n                                    alert(\"You need to complete all input fields (not only white spaces...) to update your blog data... Try again!\");\r\n                                }\r\n                            }}\r\n                        >\r\n                            Save changes\r\n                        </Link>\r\n                        <Link\r\n                            to=\"/dashboard/user-blogs\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-danger mb-3 d-block\"\r\n                            onClick={() => {\r\n                                // eslint-disable-next-line no-restricted-globals\r\n                                const wantToDeleteBlog = confirm(\"Are you sure, you want to delete this blog & all articles from this blog forever? There's no turning back... Delete blog?\");\r\n                                if (wantToDeleteBlog) {\r\n                                    deleteBlog(blogKey);\r\n                                }\r\n                            }}\r\n                        >\r\n                            Delete blog\r\n                        </Link>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-lg\">\r\n                    <h4 className=\"text-center\">Articles</h4>\r\n                    <hr />\r\n                    {\r\n                        blog.articles ? (\r\n                            Object.entries(blog.articles).map((article) => (\r\n                                <div key={article[0]}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md\">\r\n                                            <h5>{article[1].title}</h5>\r\n                                            <p>{article[1].description}</p>\r\n                                        </div>\r\n                                        <div className=\"col-md text-end\">\r\n                                            <Link\r\n                                                to={\"/edit-article/\" + blogKey + \"/\" + article[0]}\r\n                                                className=\"btn btn-secondary d-inline\"\r\n                                            >\r\n                                                <i className=\"bi bi-pencil\" />\r\n                                            </Link>\r\n                                            <Link\r\n                                                to={\"/blogs/\" + blog.blogLink + \"/\" + article[1].articleLink}\r\n                                                className=\"btn btn-secondary d-inline\"\r\n                                            >\r\n                                                <i className=\"bi bi-eye\" />\r\n                                            </Link>\r\n                                            <button\r\n                                                className=\"btn btn-danger d-inline\"\r\n                                                onClick={() => {\r\n                                                    // eslint-disable-next-line no-restricted-globals\r\n                                                    const wantToDeleteArticle = confirm(\"Are you sure, you want to delete this article from this blog forever? There's no turning back... Delete article?\");\r\n                                                    if (wantToDeleteArticle) {\r\n                                                        deleteArticle(blogKey, article[0]);\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i className=\"bi bi-trash\" />\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </div>\r\n                            ))\r\n                        ) : (\r\n                            <div>\r\n                                There are no articles...\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <h5>Downloading blog data...</h5>\r\n        );\r\n    }\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport { Link, Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport BlogEditionForm from \"./BlogEditionForm\";\r\n\r\nexport default function UserBlogsListInDashboard() {\r\n\r\n    let {path, url} = useRouteMatch();\r\n\r\n    const { user, blogs, deleteBlog, deleteArticle } = useDatabase();\r\n\r\n    const [userBlogs, setUserBlogs] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (blogs && user) {\r\n            const fetchedBlogs = Object.entries(blogs);\r\n            const currentUserBLogs = fetchedBlogs.filter(blog => blog[1].userId === user.uid)\r\n            setUserBlogs(currentUserBLogs);\r\n        } else {\r\n            console.log(\"there are no user and blogs...\")\r\n        }\r\n    }, [blogs, user]);\r\n\r\n    /*\r\n    function convertBlogTitleIntoLink(blogTitle) {\r\n        return (blogTitle.replace(/ /g, \"-\").toLowerCase());\r\n    }\r\n    */\r\n\r\n    return (\r\n        <div className=\"UserBlogsListInDashboard\">\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <div>\r\n                        <Link\r\n                            to=\"/create-blog\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-info d-block my-3\"\r\n                        >Create new blog</Link>\r\n                        {\r\n                            userBlogs && userBlogs.length ?\r\n                                userBlogs.map((blog) =>\r\n                                    <div className=\"container\" key={blog[0]}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <Link\r\n                                                    to={url + \"/\" + blog[1].blogLink}\r\n                                                >\r\n                                                    <h5>{blog[1].title}</h5>\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"col-4 text-end\">\r\n                                                <Link\r\n                                                    to={\"/create-article/\" + blog[0] + \"/\" + blog[1].title}\r\n                                                    className=\"text-info\"\r\n                                                >\r\n                                                    <i className=\"bi bi-plus-square me-2\" />\r\n                                                </Link>\r\n                                                <Link\r\n                                                    className=\"text-primary\"\r\n                                                    to={`/blogs/${blog[1].blogLink}`}\r\n                                                >\r\n                                                    <i className=\"bi bi-eye me-2\" />\r\n                                                </Link>\r\n                                                <Link\r\n                                                    className=\"text-danger\"\r\n                                                    to=\"/dashboard/user-blogs\"\r\n                                                    onClick={() => {\r\n                                                        // eslint-disable-next-line no-restricted-globals\r\n                                                        const wantToDeleteBlog = confirm(\"Are you sure, you want to delete this blog & all articles from this blog forever? There's no turning back... Delete blog?\");\r\n                                                        if (wantToDeleteBlog) {\r\n                                                            deleteBlog(blog[0]);\r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <i className=\"bi bi-trash\" />\r\n                                                </Link>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        <p>{blog[1].description}</p>\r\n                                        <hr />\r\n                                    </div>\r\n                                )\r\n                            :\r\n                                <div>\r\n                                    <h5 className=\"text-center\">There is no blogs yet... Create one!</h5>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </Route>\r\n                <Route path={path + \"/:blogLink\"}>\r\n                    <BlogEditionForm />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import { Link, Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport UserDataFormInDashboard from \"./UserDataFormInDashboard\";\r\nimport UserBlogsListInDashboard from \"./UserBlogsListInDashboard\";\r\n\r\nexport default function Dashboard() {\r\n\r\n    let {path} = useRouteMatch();\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"text-center\">\r\n                <Link\r\n                    to={`/dashboard/user-data`}\r\n                    className=\"me-2\"\r\n                >Your profile data</Link>\r\n                <span> | </span>\r\n                <Link\r\n                    to={`/dashboard/user-blogs`}\r\n                    className=\"ms-2\"\r\n                >Your blogs</Link>\r\n            </div>\r\n            <hr />\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <UserDataFormInDashboard />\r\n                </Route>\r\n                <Route path={`${path}/user-data`}>\r\n                    <UserDataFormInDashboard />\r\n                </Route>\r\n                <Route path={`${path}/user-blogs`}>\r\n                    <UserBlogsListInDashboard />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\n\r\nexport default function BloggersList() {\r\n\r\n    const { bloggers } = useDatabase();\r\n\r\n    const [bloggersList, setBloggersList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (bloggers) {\r\n            setBloggersList(Object.entries(bloggers));\r\n        }\r\n    }, [bloggers]);\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n                <h1>Bloggers</h1>\r\n                <hr />\r\n                {\r\n                    bloggersList ? (\r\n                        bloggersList.map((blogger) => {\r\n                            const bloggerId = blogger[0];\r\n                            const bloggerData = blogger[1];\r\n                            return (\r\n                                <Link\r\n                                    key={bloggerId}\r\n                                    to={\"bloggers/\" + bloggerData.userName}\r\n                                    className=\"d-block my-2\"\r\n                                    style={{textDecoration: \"none\"}}\r\n                                >\r\n                                    <i className=\"bi bi-person-circle me-2\"></i>\r\n                                    {bloggerData.firstName + \" \" + bloggerData.lastName + \" | \" + bloggerData.userName}\r\n                                </Link>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <p>Downloading bloggers list...</p>\r\n                    )\r\n                }\r\n            </>\r\n        </div>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport convertTitleIntoLink from \"../functions/convertTitleIntoLink\";\r\n\r\nexport default function CreateBlogForm() {\r\n\r\n    const { addBlog } = useDatabase();\r\n\r\n    const [newBlogData, setNewBlogData] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        articles: Array(0)\r\n    });\r\n\r\n    function handleSubmit() {\r\n        if (\r\n            newBlogData.title.replace(/\\s/g, '').length &&\r\n            newBlogData.description.replace(/\\s/g, '').length\r\n        ) {\r\n            const blogLink = convertTitleIntoLink(newBlogData.title);\r\n            const newBlogDataWithLink = {\r\n                ...newBlogData,\r\n                blogLink: blogLink\r\n            }\r\n            addBlog(newBlogDataWithLink);\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to create new blog... Try again!\");\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form>\r\n                <h1>Create new blog!</h1>\r\n                <hr />\r\n                <div className=\"mb-2\">\r\n                    <p>New blog title goes here:</p>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"title\"\r\n                        onChange={(e) => setNewBlogData({...newBlogData, title: e.target.value})}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <p>New blog description goes here:</p>\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"description\"\r\n                        onChange={(e) => setNewBlogData({...newBlogData, description: e.target.value})}\r\n                    />\r\n                </div>\r\n                \r\n                <Link\r\n                    to=\"/dashboard/user-blogs\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary mb-3\"\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Create new blog\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\n\r\nexport default function MarkdownEditor({ articleData, setArticleData }) {\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"Editor col-lg mt-2 mx-2\" style={{marginBottom: 90}}>\r\n                <p className=\"text-center\">Write your content here using Markdown Syntax (ommit title)</p>\r\n                <hr />\r\n                <textarea\r\n                    defaultValue={articleData.content}\r\n                    onChange={(e) => setArticleData({...articleData, content: e.target.value})}\r\n                    style={{width: \"100%\", height: \"80%\"}}\r\n                />\r\n            </div>\r\n            <div className=\"RenderedView col-lg m-2\">\r\n                <p className=\"text-center\">Here you can see how your article would be looking like</p>\r\n                <hr />\r\n                <div>\r\n                    <h1>{articleData.title}</h1>\r\n                    <ReactMarkdown children={articleData.content} remarkPlugins={[remarkGfm]} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n<button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success my-2\"\r\n                    onClick={() => console.log(contentForEdition)}\r\n                >Save changes</button>\r\n                */\r\n\r\n/*\r\n# Finally I'm used!\r\n\r\nFinally this markdown editor will be used in real-life project - Blogging Platform!\r\n\r\nI've made it separately a few days ago & now I can use this extra feature to let my users:\r\n\r\n- create articles\r\n- edit them\r\n- and format text whatever they like!\r\n*/","import { useState } from \"react\";\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport MarkdownEditor from \"./MarkdownEditor\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport convertTitleIntoLink from \"../functions/convertTitleIntoLink\";\r\n\r\nexport default function CreateArticlePage() {\r\n\r\n    const { blogKey } = useParams();\r\n    const { blogTitle } = useParams();\r\n\r\n    const { addArticle } = useDatabase();\r\n\r\n    const [newArticleData, setNewArticleData] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        content: \"\"\r\n    });\r\n\r\n    function handleSubmit() {\r\n        if (\r\n            newArticleData.title.replace(/\\s/g, '').length &&\r\n            newArticleData.description.replace(/\\s/g, '').length\r\n        ) {\r\n            const articleLink = convertTitleIntoLink(newArticleData.title);\r\n            const date = new Date();\r\n            const day = date.getUTCDate();\r\n            const month = date.getUTCMonth() + 1;\r\n            const year = date.getUTCFullYear();\r\n            const createdAt = year + \".\" + month + \".\" + day;\r\n            const newArticleDataWithLink = {\r\n                ...newArticleData,\r\n                articleLink: articleLink,\r\n                createdAt: createdAt\r\n            }\r\n            addArticle(blogKey, blogTitle, newArticleDataWithLink);\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to create new article... Try again!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"CreateArticlePage container\">\r\n            <form>\r\n                <h1>Create new article!</h1>\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg mb-2\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"title\"\r\n                            onChange={(e) => setNewArticleData({...newArticleData, title: e.target.value})}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg mb-2\">\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"description\"\r\n                            onChange={(e) => setNewArticleData({...newArticleData, description: e.target.value})}\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <hr />\r\n            <MarkdownEditor\r\n                articleData={newArticleData}\r\n                setArticleData={setNewArticleData}\r\n            />\r\n            <Link\r\n                to=\"/dashboard/user-blogs\"\r\n                type=\"button\"\r\n                className=\"btn btn-primary mb-3\"\r\n                onClick={handleSubmit}\r\n            >\r\n                Create new article\r\n            </Link>\r\n        </div>\r\n    );\r\n}","export default function Footer() {\r\n    return (\r\n        <p className=\"Footer text-muted\">\r\n            <a\r\n                className=\"nav-link text-center mb-3\"\r\n                href=\"https://github.com/vadimgierko/blogging-platform\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                style={{display: \"inline\"}}\r\n            >Blogging Platform</a>\r\n            & its feature\r\n            <a\r\n                className=\"nav-link text-center mb-3\"\r\n                href=\"https://github.com/vadimgierko/markdown-text-editor\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                style={{display: \"inline\"}}\r\n            >Markdown Editor</a>\r\n            created by\r\n            <a\r\n                className=\"nav-link text-center mb-3\"\r\n                href=\"https://github.com/vadimgierko\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                style={{display: \"inline\"}}\r\n            >Vadim Gierko</a>\r\n            | 2021\r\n        </p>\r\n    );\r\n}","import { useDatabase } from \"../hooks/use-database\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nexport default function BloggerPage() {\r\n\r\n    const { userName } = useParams();\r\n\r\n    const { blogs, bloggers } = useDatabase();\r\n\r\n    const [blogger, setBlogger] = useState(null);\r\n    const [bloggerBlogs, setBloggerBlogs] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (bloggers) {\r\n            if (userName) {\r\n                const bloggersArray = Object.entries(bloggers);\r\n                bloggersArray.map((blogger) => \r\n                    blogger[1].userName === userName ? setBlogger({...blogger[1]}) : null\r\n                )\r\n            }\r\n        }\r\n    }, [bloggers, userName]);\r\n\r\n    useEffect(() => {\r\n        if (blogs) {\r\n            if (blogger && userName) {\r\n                const blogsArray = Object.entries(blogs);\r\n                let userBlogs = [];\r\n                for (let i = 0; i < blogsArray.length; i++) {\r\n                    if (blogsArray[i][1].userName === userName) {\r\n                        userBlogs = [...userBlogs, blogsArray[i][1]]\r\n                    }\r\n                }\r\n                /*\r\n                const userBlogs = blogsArray.map((blog) => {\r\n                    if (blog[1].userName === userName) {\r\n                        return {...blog[1]};\r\n                    }\r\n                    return null;\r\n                });\r\n                */\r\n                setBloggerBlogs(userBlogs);\r\n                //console.log(\"userBlogs:\", userBlogs)\r\n            }\r\n        }\r\n    }, [blogs, userName, blogger]);\r\n\r\n    return (\r\n        <div className=\"BloggerPage\">\r\n            {\r\n                blogger ? (\r\n                    <>\r\n                        <h1>{blogger.firstName + \" \" + blogger.lastName}</h1>\r\n                        <hr />\r\n                        <p>user name: {\"@\" + blogger.userName}</p>\r\n                        <p>email: {blogger.email}</p>\r\n                        <hr />\r\n                        <h3>{blogger.firstName + \" \" + blogger.lastName}'s blogs:</h3>\r\n                        <ul>\r\n                            {\r\n                                bloggerBlogs && bloggerBlogs.length && bloggerBlogs[0] !== null ? (\r\n                                    bloggerBlogs.map((blog) => \r\n                                        <li key={blog.blogLink}>\r\n                                            <Link to={`/blogs/${blog.blogLink}`}>{blog.title}</Link>\r\n                                        </li>\r\n                                    )\r\n                                ) : (\r\n                                    <p>Downloading blogger blogs...</p>\r\n                                )\r\n                            }\r\n                        </ul>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <p>Downloading data or ... there is no blogger of user name: {userName}</p>\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport MarkdownEditor from \"./MarkdownEditor\";\r\nimport { useDatabase } from \"../hooks/use-database\";\r\nimport convertTitleIntoLink from \"../functions/convertTitleIntoLink\";\r\n\r\nexport default function UpdateArticlePage() {\r\n\r\n    const { blogKey } = useParams();\r\n    const { articleKey } = useParams();\r\n\r\n    const { blogs, updateArticle } = useDatabase();\r\n\r\n    const [updatedArticleData, setUpdatedArticleData] = useState(null);\r\n\r\n    function handleSubmit() {\r\n        if (\r\n            updatedArticleData.title.replace(/\\s/g, '').length &&\r\n            updatedArticleData.description.replace(/\\s/g, '').length\r\n        ) {\r\n            // update article link in the case if title changed:\r\n            const articleLink = convertTitleIntoLink(updatedArticleData.title);\r\n            // set date of update:\r\n            const date = new Date();\r\n            const day = date.getUTCDate();\r\n            const month = date.getUTCMonth() + 1;\r\n            const year = date.getUTCFullYear();\r\n            const updatedAt = year + \".\" + month + \".\" + day;\r\n            // update updatedData with new link & updateAt date:\r\n            const updatedArticleDataWithLink = {\r\n                ...updatedArticleData,\r\n                articleLink: articleLink,\r\n                updatedAt: updatedAt\r\n            }\r\n            updateArticle(blogKey, articleKey, updatedArticleDataWithLink);\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to create new article... Try again!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (blogs) {\r\n            const currentBlog = blogs[blogKey];\r\n            console.log(\"currentBlog:\", currentBlog);\r\n            const currentArticle = currentBlog.articles[articleKey];\r\n            console.log(\"currentArticle:\", currentArticle);\r\n            setUpdatedArticleData(currentArticle);\r\n        }\r\n    }, [blogs, blogKey, articleKey]);\r\n\r\n    return (\r\n        <div className=\"UpdateArticlePage container\">\r\n            {\r\n                updatedArticleData ? (\r\n                    <>\r\n                        <form>\r\n                            <h1>Update article!</h1>\r\n                            <hr />\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        defaultValue={updatedArticleData.title}\r\n                                        onChange={(e) => setUpdatedArticleData({...updatedArticleData, title: e.target.value})}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-lg mb-2\">\r\n                                    <textarea\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        defaultValue={updatedArticleData.description}\r\n                                        onChange={(e) => setUpdatedArticleData({...updatedArticleData, description: e.target.value})}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <hr />\r\n                        <MarkdownEditor\r\n                            articleData={updatedArticleData}\r\n                            setArticleData={setUpdatedArticleData}\r\n                        />\r\n                        <Link\r\n                            to=\"/dashboard/user-blogs\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary mb-3\"\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Update article\r\n                        </Link>\r\n                    </>\r\n                ) : (\r\n                    <>Cannot fetch the article data...</>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}","import \"./App.css\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./components/Home\";\r\nimport BlogsListPage from \"./components/BlogsListPage\";\r\nimport BlogPage from \"./components/BlogPage\";\r\nimport SignInForm from \"./components/SignInForm\";\r\nimport SignUpForm from \"./components/SignUpForm\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport BloggersList from \"./components/BloggersList\";\r\nimport CreateBlogForm from \"./components/CreateBlogForm\";\r\nimport CreateArticlePage from \"./components/CreateArticlePage\";\r\nimport Footer from \"./components/Footer\";\r\nimport BloggerPage from \"./components/BloggerPage\";\r\nimport UpdateArticlePage from \"./components/UpdateArticlePage\";\r\nimport { useDatabase } from \"./hooks/use-database\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const { user } = useDatabase();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setUserId(user.uid);\r\n    } else {\r\n      setUserId(null);\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <div className=\"container\" style={{ marginTop: 120 }}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <SignInForm />\r\n          </Route>\r\n          <Route path=\"/signup\">\r\n            <SignUpForm />\r\n          </Route>\r\n          <Route path=\"/dashboard\">\r\n            {\r\n              userId\r\n              ? <Dashboard />\r\n              : (\r\n                <div>\r\n                  <h3>Something went wrong...</h3>\r\n                  <ul>\r\n                    <li>...wait for a data download or...</li>\r\n                    <li>...try to sign in one more time or...</li>\r\n                    <li>...create an account with create account button if don't have one or...</li>\r\n                    <li>...check your Internet connection...</li>\r\n                  </ul>\r\n                </div>\r\n              )\r\n            }\r\n          </Route>\r\n          <Route path=\"/blogs/:blogLink\">\r\n            <BlogPage />\r\n          </Route>\r\n          <Route path=\"/blogs\">\r\n            <BlogsListPage />\r\n          </Route>\r\n          <Route path=\"/bloggers/:userName\">\r\n            <BloggerPage />\r\n          </Route>\r\n          <Route path=\"/bloggers\">\r\n            <BloggersList />\r\n          </Route>\r\n          <Route path=\"/create-blog\">\r\n            <CreateBlogForm />\r\n          </Route>\r\n          <Route path=\"/create-article/:blogKey/:blogTitle\">\r\n            <CreateArticlePage />\r\n          </Route>\r\n          <Route path=\"/edit-article/:blogKey/:articleKey\">\r\n            <UpdateArticlePage />\r\n          </Route>\r\n        </Switch>\r\n        <hr />\r\n        <div className=\"text-center\">\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"bootswatch/dist/lux/bootstrap.min.css\"\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { DatabaseProvider } from \"./hooks/use-database\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <DatabaseProvider>\r\n        <App />\r\n      </DatabaseProvider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}