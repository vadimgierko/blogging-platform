{"version":3,"sources":["components/atoms/NavLink.js","components/atoms/LinkButton.js","components/organisms/Header.js","firebase.js","hooks/use-database.js","components/molecules/BlogCard.js","components/pages/Blogs.js","components/molecules/TableOfContent.js","components/molecules/SectionHeader.js","components/pages/Blog.js","components/organisms/Form.js","initial-data/form-structure-templates.js","components/page-sections/dashboard/UserDataSection.js","functions/convertTitleIntoLink.js","components/page-sections/dashboard/BlogEditionSection.js","components/page-sections/dashboard/UserBlogsSection.js","components/pages/Dashboard.js","components/molecules/BloggerCard.js","components/pages/Bloggers.js","components/pages/CreateBlog.js","components/page-sections/create-article/MarkdownEditor.js","components/pages/CreateArticle.js","components/atoms/FooterLink.js","components/organisms/Footer.js","components/pages/Blogger.js","components/organisms/Article.js","components/pages/SignIn.js","components/pages/SignUp.js","components/pages/About.js","components/pages/UpdateArticle.js","App.js","reportWebVitals.js","index.js"],"names":["NavLink","to","onClick","text","className","LinkButton","style","isCollapsed","type","NAVLINKS","PUBLIC_LINK_BUTTONS","PRIVATE_LINK_BUTTONS","Header","userFirstName","userLastName","logOut","useState","isNavCollapsed","setIsNavCollapsed","handleNavCollapse","id","map","navLink","i","textDecoration","btn","app","getApp","e","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseAuth","getAuth","database","getDatabase","DatabaseContext","createContext","useDatabase","useContext","DatabaseProvider","children","user","setUser","userPrivateData","setUserPrivateData","userPublicData","setUserPublicData","userBlogsList","setUserBlogsList","usersListOrderedByUserName","setUsersListOrderedByUserName","usersListOrderedByKeys","setUsersListOrderedByKeys","bloggerPublicData","setBloggerPublicData","bloggerBlogsList","setBloggerBlogsList","bloggerId","setBloggerId","blog","setBlog","blogs","setBlogs","article","setArticle","articleKey","setArticleKey","a","signOut","alert","message","useEffect","onAuthStateChanged","console","log","userPrivateDataRef","ref","uid","onValue","snapshot","data","val","userPublicDataRef","value","signIn","signInData","email","password","signInWithEmailAndPassword","catch","error","signUp","signUpData","createUserWithEmailAndPassword","then","userCredential","set","privateData","publicData","firstName","lastName","userName","userId","fetchUsersListOrderedByKeys","listRef","query","limitToFirst","fetchUsersListOrderedByUserName","fetchBloggerPublicData","bloggerPublicDataRef","fetchBloggerBlogsList","bloggerBlogsListRef","getBloggerIdByUserName","bloggerRef","fetchBlog","blogKey","blogRef","fetchArticle","articleRef","getArticleKeyByLink","articleLink","key","fetchUserBlogsList","currentUserDataRef","updateUserPublicData","userData","prevUserName","remove","fetchBlogs","blogsRef","deleteBlog","addBlog","blogData","newBlogKey","push","child","author","updateBlog","updatedBlogData","addArticle","blogTitle","newArticleKey","deleteArticle","updateArticle","updatedArticleData","deleteUserAccount","userForDelete","currentUser","userIdForDelete","userBlogsForDelete","Object","entries","filter","length","userBlogsKeysForDelete","n","confirm","deleteUser","Provider","BlogCard","blogLink","title","description","Blogs","TableOfContent","articles","url","SectionHeader","item","createdAt","updatedAt","Blog","useRouteMatch","useParams","currentBlog","find","Form","structure","onSubmit","formClassname","itemArray","setItemArray","keys","keyValuePair","placeholder","onChange","updatedItem","target","fromEntries","SIGN_IN","EDIT_USER_DATA","SIGN_UP","CREATE_BLOG","UserDataSection","replace","convertTitleIntoLink","toLowerCase","BlogEditionSection","setBlogKey","currentBlogArray","currentBlogKey","defaultValue","width","UserBlogsSection","path","exact","Dashboard","BloggerCard","bloggerData","Bloggers","blogger","CreateBlog","MarkdownEditor","articleData","setArticleData","marginBottom","content","height","remarkPlugins","remarkGfm","CreateArticlePage","newArticleData","setNewArticleData","required","FooterLink","href","rel","FOOTER_LINKS","Footer","Blogger","Article","metadata","SignIn","SignUp","About","color","UpdateArticle","setUpdatedArticleData","currentArticle","App","setUserId","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cdb391c.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nexport default function NavLink({ to, onClick, text }) {\r\n    return (\r\n        <Link\r\n            className=\"nav-link\"\r\n            to={to}\r\n            onClick={onClick}\r\n        >{text}</Link>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function LinkButton({ to, style, onClick, text, isCollapsed }) {\r\n    return (\r\n        <Link\r\n            type=\"button\"\r\n            to={to}\r\n            className={\"link-button btn btn-outline-\" + style + (isCollapsed ? \" ms-2\" : \" mt-3 d-block\")}\r\n            onClick={onClick}\r\n        >{text}</Link>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavLink from '../atoms/NavLink';\r\nimport LinkButton from '../atoms/LinkButton';\r\n\r\nconst NAVLINKS = [\r\n    {\r\n        to: \"/\",\r\n        text: \"About\",\r\n    },\r\n    {\r\n        to: \"/blogs\",\r\n        text: \"Blogs\",\r\n    },\r\n    {\r\n        to: \"/bloggers\",\r\n        text: \"Bloggers\",\r\n    },\r\n];\r\n\r\nconst PUBLIC_LINK_BUTTONS = [\r\n    {\r\n        to: \"/login\",\r\n        text: \"Sign In\",\r\n        style: \"success\"\r\n    },\r\n    {\r\n        to: \"/signup\",\r\n        text: \"Create Account\",\r\n        style: \"info\"\r\n    },\r\n];\r\n\r\nconst PRIVATE_LINK_BUTTONS = [\r\n    {\r\n        to: \"/\",\r\n        text: \"Log Out\",\r\n        style: \"danger\"\r\n    },\r\n];\r\n\r\nexport default function Header({ userFirstName, userLastName, logOut }) {\r\n\r\n    const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n    \r\n    const handleNavCollapse = () => {\r\n        setIsNavCollapsed(!isNavCollapsed);\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Blogging Platform</Link>\r\n                <button\r\n                    className=\"navbar-toggler collapsed\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarColor01\"\r\n                    aria-controls=\"navbarColor01\"\r\n                    aria-expanded={isNavCollapsed ? true : false}\r\n                    aria-label=\"Toggle navigation\"\r\n                    onClick={handleNavCollapse}\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className={`${isNavCollapsed ? \"collapse\" : null} navbar-collapse`} id=\"navbarColor01\">\r\n                    <ul className=\"navbar-nav me-auto\">\r\n                        {\r\n                            NAVLINKS.map((navLink, i) => (\r\n                                <li key={\"nav-item-\" + i} className=\"nav-item\">\r\n                                    <NavLink \r\n                                        to={navLink.to}\r\n                                        onClick={() => {\r\n                                            if (!isNavCollapsed) {\r\n                                                handleNavCollapse();\r\n                                            }\r\n                                        }}\r\n                                        text={navLink.text}\r\n                                    />\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                    <div>\r\n                        {\r\n                            userFirstName ?\r\n                                <>\r\n                                    <Link\r\n                                        to=\"/dashboard\"\r\n                                        className=\"text-light text-muted\"\r\n                                        style={{textDecoration: \"none\"}}\r\n                                        onClick={() => {\r\n                                            if (!isNavCollapsed) {\r\n                                                handleNavCollapse();\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <span className=\"me-2\"><i className=\"bi bi-person-circle\"></i></span>\r\n                                        <span className=\"me-3\">{userFirstName} {userLastName}</span>\r\n                                    </Link>\r\n                                    {\r\n                                        PRIVATE_LINK_BUTTONS.map((btn, i) => (\r\n                                            <LinkButton\r\n                                                key={\"private-link-btn-\" + i}\r\n                                                to={btn.to}\r\n                                                text={btn.text}\r\n                                                style={btn.style}\r\n                                                isCollapsed={isNavCollapsed}\r\n                                                onClick={() => {\r\n                                                    logOut();\r\n                                                    if (!isNavCollapsed) {\r\n                                                        handleNavCollapse();\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        ))\r\n                                    }\r\n                                </>\r\n                            :\r\n                                <>\r\n                                    {\r\n                                        PUBLIC_LINK_BUTTONS.map((btn, i) => (\r\n                                            <LinkButton\r\n                                                key={\"public-link-btn-\" + i}\r\n                                                to={btn.to}\r\n                                                text={btn.text}\r\n                                                style={btn.style}\r\n                                                isCollapsed={isNavCollapsed}\r\n                                                onClick={isNavCollapsed ? null : () => handleNavCollapse()}\r\n                                            />\r\n                                        ))\r\n                                    }\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}","import { initializeApp, getApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase } from \"firebase/database\";\r\n//import { getAnalytics } from \"firebase/analytics\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCDziv5T2lwy_1jcHriik2c9hWd1qPcY_s\",\r\n  authDomain: \"blogging-platform-4ebc2.firebaseapp.com\",\r\n  databaseURL: \"https://blogging-platform-4ebc2-default-rtdb.firebaseio.com\",\r\n  projectId: \"blogging-platform-4ebc2\",\r\n  storageBucket: \"blogging-platform-4ebc2.appspot.com\",\r\n  messagingSenderId: \"669118367342\",\r\n  appId: \"1:669118367342:web:0348ae0115ae90740dc87f\",\r\n  measurementId: \"G-PQXT1EE1GJ\"\r\n};\r\n\r\n// Initialize Firebase\r\nlet app;\r\ntry {\r\n  app = getApp();\r\n} catch (e) {\r\n  app = initializeApp(firebaseConfig);\r\n}\r\n\r\nexport const firebaseAuth = getAuth(app);\r\nexport const database = getDatabase(app);\r\n//const analytics = getAnalytics(firebaseApp);","import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { firebaseAuth, database } from \"../firebase\"; // + , storage\r\n\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n  deleteUser\r\n} from \"firebase/auth\";\r\n\r\nimport {\r\n    ref,\r\n    set,\r\n    push,\r\n    child,\r\n    //update,\r\n    onValue,\r\n    remove,\r\n    query,\r\n    limitToFirst\r\n} from \"firebase/database\";\r\n\r\nconst DatabaseContext = createContext();\r\n\r\nexport const useDatabase = () => useContext(DatabaseContext);\r\n\r\nexport function DatabaseProvider({ children }) {\r\n\r\n  //==================== current logged user:\r\n  //\r\n  const [user, setUser] = useState(null);\r\n  const [userPrivateData, setUserPrivateData] = useState();\r\n  const [userPublicData, setUserPublicData] = useState();\r\n  const [userBlogsList, setUserBlogsList] = useState();\r\n\r\n  //============================ bloggers:\r\n  //\r\n  const [usersListOrderedByUserName, setUsersListOrderedByUserName] = useState();\r\n  const [usersListOrderedByKeys, setUsersListOrderedByKeys] = useState();\r\n  const [bloggerPublicData, setBloggerPublicData] = useState();\r\n  const [bloggerBlogsList, setBloggerBlogsList] = useState();\r\n  const [bloggerId, setBloggerId] = useState();\r\n\r\n  //========================= blog\r\n  const [blog, setBlog] = useState();\r\n\r\n  const [blogs, setBlogs] = useState();\r\n\r\n  //======================== article\r\n  const [article, setArticle] = useState();\r\n  const [articleKey, setArticleKey] = useState();\r\n\r\n  //================================= auth & userData functions ==\r\n\r\n  const signIn = (signInData) => {\r\n    const email = signInData.email;\r\n    const password = signInData.password;\r\n    return signInWithEmailAndPassword(firebaseAuth, email, password)\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const signUp = (signUpData) => {\r\n    return createUserWithEmailAndPassword(firebaseAuth, signUpData.email, signUpData.password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        //setUser(userCredential.user);\r\n        console.log(\"user is sign up. userCredential.user: \", userCredential.user);\r\n        \r\n        // create user in database:\r\n        set(ref(database, \"users/\" + userCredential.user.uid), {\r\n          privateData: {\r\n            email: signUpData.email\r\n          },\r\n          publicData: {\r\n            data: {\r\n              firstName: signUpData.firstName,\r\n              lastName: signUpData.lastName,\r\n              userName: signUpData.userName\r\n            }\r\n          }          \r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n\r\n        // add user's public data into users list ordered by keys:\r\n        set(ref(database, \"users/listOrderedByKeys/\" + userCredential.user.uid), {\r\n          firstName: signUpData.firstName,\r\n          lastName: signUpData.lastName,\r\n          userName: signUpData.userName\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n\r\n        // add user's public data into users list ordered by user name:\r\n        set(ref(database, \"users/listOrderedByUserName/\" + signUpData.userName), {\r\n          firstName: signUpData.firstName,\r\n          lastName: signUpData.lastName,\r\n          userId: userCredential.user.uid\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const updateUserPublicData = (userData) => {\r\n    // save prev userName val:\r\n    const prevUserName = userPublicData.userName;\r\n    // update user data:\r\n    set(ref(database, \"users/\" + user.uid + \"/publicData/data\"), {\r\n      ...userData\r\n    })\r\n    .catch((error) => {\r\n      alert(error.message);\r\n    });\r\n\r\n    // update user's public data in users list ordered by keys:\r\n    set(ref(database, \"users/listOrderedByKeys/\" + user.uid), {\r\n      ...userData\r\n    })\r\n    .catch((error) => {\r\n      alert(error.message);\r\n    });\r\n\r\n    // update user's public data in users list ordered by user name:\r\n    if (userData.userName === prevUserName) {\r\n      // if userName wasn't updated:\r\n      set(ref(database, \"users/listOrderedByUserName/\" + prevUserName), {\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        userId: user.uid\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n    } else {\r\n      // if userName was updated:\r\n      // delete prev userName record:\r\n      remove(ref(database, \"users/listOrderedByUserName/\" + prevUserName))\r\n      .then(() => console.log(prevUserName, \"record was deleted from database.\"))\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n      // set new userName record:\r\n      set(ref(database, \"users/listOrderedByUserName/\" + userData.userName), {\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        userId: user.uid\r\n      })\r\n      .then(() => console.log(userData.userName, \"record was added to database.\"))\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n    }\r\n  };\r\n\r\n  const logOut = async () => {\r\n    try {\r\n      await signOut(firebaseAuth);\r\n      setUser(null);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  // THIS FUNCTION IS OFF FOR A MOMENT (delete this comment, when fix)\r\n  const deleteUserAccount = () => {\r\n    console.log(\"deleteUser operations:\");\r\n    const userForDelete = firebaseAuth.currentUser;\r\n    console.log(\"userForDelete:\", userForDelete);\r\n    const userIdForDelete = userForDelete.uid;\r\n    console.log(\"userIdForDelete:\", userIdForDelete);\r\n\r\n    if (userForDelete && userIdForDelete) {\r\n      // 1. delete user data first:\r\n      remove(ref(database, \"users/\" + userForDelete.uid)).then(() => {\r\n        console.log(\"User data of deleted user \" + userIdForDelete + \" was deleted...\");\r\n      }).catch((error) => {\r\n        // An error ocurred\r\n        alert(error.message);\r\n      });\r\n\r\n      // + delete user from two lists => [x]\r\n      \r\n      // 2. delete user blogs in for loop:\r\n      // THIS WILL BE COMPLETELY ANOTHER PROCEDURE WHEN NEW RULES & DATA STRUCTURE WILL BE SET\r\n      const userBlogsForDelete = Object.entries(blogs).filter(blog => blog[1].userId === userIdForDelete);\r\n      console.log(\"userBlogsForDelete:\", userBlogsForDelete);\r\n      if (userBlogsForDelete && userBlogsForDelete.length) {\r\n        let userBlogsKeysForDelete = [];\r\n        for (let i = 0; i < userBlogsForDelete.length; i++) {\r\n          const key = userBlogsForDelete[i][0];\r\n          userBlogsKeysForDelete.push(key);\r\n        }\r\n        console.log(\"userBlogsKeysForDelete:\", userBlogsKeysForDelete);\r\n        if (userBlogsKeysForDelete && userBlogsKeysForDelete.length) {\r\n          for (let n = 0; n < userBlogsKeysForDelete.length; n++) {\r\n            const key = userBlogsKeysForDelete[n];\r\n            remove(ref(database, \"blogs/\" + key)).then(() => {\r\n              console.log(\"Blog \" + key + \" of deleted user \" + userIdForDelete + \" was deleted...\");\r\n              // 3. delete user in the last loop\r\n              if (n === userBlogsKeysForDelete.length - 1) {\r\n                // eslint-disable-next-line no-restricted-globals\r\n                const confirmAccountDeletion = confirm(\"Your blogs & user data was deleted. Now press OK to delete your account\");\r\n                if (confirmAccountDeletion) {\r\n                  deleteUser(userForDelete).then(() => {\r\n                    console.log(\"User \" + userIdForDelete + \" was deleted.\");\r\n                  }).catch((error) => {\r\n                    alert(error.message, \"Try again to delete your account. Your blogs & user data were already deleted.\");\r\n                  });\r\n                }\r\n              }\r\n            }).catch((error) => {\r\n              // An error ocurred\r\n              alert(error.message);\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"There are no user blogs to delete... So delete user.\");\r\n          // eslint-disable-next-line no-restricted-globals\r\n          const confirmAccountDeletion = confirm(\"Your blogs & user data was deleted. Now press OK to delete your account\");\r\n          if (confirmAccountDeletion) {\r\n            deleteUser(userForDelete).then(() => {\r\n              console.log(\"User \" + userIdForDelete + \" was deleted.\");\r\n            }).catch((error) => {\r\n              alert(error.message, \"Try again to delete your account. Your blogs & user data were already deleted.\");\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        console.log(\"There are no user blogs to delete... So delete user.\");\r\n        // eslint-disable-next-line no-restricted-globals\r\n        const confirmAccountDeletion = confirm(\"Your blogs & user data was deleted. Now press OK to delete your account\");\r\n        if (confirmAccountDeletion) {\r\n          deleteUser(userForDelete).then(() => {\r\n            console.log(\"User \" + userIdForDelete + \" was deleted.\");\r\n          }).catch((error) => {\r\n            alert(error.message, \"Try again to delete your account. Your blogs & user data were already deleted.\");\r\n          });\r\n        }\r\n      }  \r\n    } else {\r\n      alert(\"You need to be signed in to delete your account. Try again!\")\r\n    }\r\n  }\r\n\r\n  //============================== fetch ===========================\r\n  //\r\n  function fetchUsersListOrderedByUserName() {\r\n    const listRef = query(ref(database, \"users/listOrderedByUserName\"), limitToFirst(10));\r\n    onValue(listRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      console.log(\"users list ordered by user name object:\", data);\r\n      setUsersListOrderedByUserName(data);\r\n    });\r\n  }\r\n\r\n  function fetchUsersListOrderedByKeys() {\r\n    const listRef = query(ref(database, \"users/listOrderedByKeys\"), limitToFirst(10));\r\n    onValue(listRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      console.log(\"users list ordered by user id object:\", data);\r\n      setUsersListOrderedByKeys(data);\r\n    });\r\n  }\r\n\r\n  function fetchBloggerPublicData(userId) {\r\n    const bloggerPublicDataRef = ref(database, \"users/\" + userId + \"/publicData/data\");\r\n    onValue(bloggerPublicDataRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      console.log(\"blogger public data object:\", data);\r\n      setBloggerPublicData(data);\r\n    });\r\n  }\r\n\r\n  function fetchBloggerBlogsList(userId) {\r\n    const bloggerBlogsListRef = ref(database, \"users/\" + userId + \"/publicData/blogs\");\r\n    onValue(bloggerBlogsListRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      console.log(\"blogger blogs list object:\", data);\r\n      setBloggerBlogsList(data);\r\n    });\r\n  }\r\n\r\n  //============== fetch user\r\n  //\r\n  function fetchUserBlogsList(userId) {\r\n    const currentUserDataRef = ref(database, \"users/\" + userId + \"/publicData/blogs\");\r\n    onValue(currentUserDataRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      console.log(\"current user blogs list data object:\", data);\r\n      setUserBlogsList(data);\r\n    });\r\n  }\r\n\r\n  //============= fetch blog\r\n  //\r\n  function fetchBlog(blogKey) {\r\n    const blogRef = ref(database, \"blogs/\" + blogKey);\r\n    onValue(blogRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      console.log(\"blog object:\", data);\r\n      setBlog(data);\r\n    });\r\n  }\r\n\r\n  //============= fetch article\r\n  function fetchArticle(articleKey) {\r\n    const articleRef = ref(database, \"articles/\" + articleKey);\r\n    onValue(articleRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      console.log(\"article object:\", data);\r\n      setArticle(data);\r\n    });\r\n  }\r\n\r\n  //=============== get\r\n\r\n  function getArticleKeyByLink(articleLink) {\r\n    const articleRef = ref(database, \"articles/listOrderedByLinks/\" + articleLink);\r\n    onValue(articleRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      console.log(\"article key:\", data.key);\r\n      setArticleKey(data.key);\r\n    });\r\n  }\r\n\r\n  function getBloggerIdByUserName(userName) {\r\n    const bloggerRef = ref(database, \"users/listOrderedByUserName/\" + userName);\r\n    onValue(bloggerRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        console.log(\"blogger id got by user name:\", data.userId);\r\n        setBloggerId(data.userId);\r\n      } else {\r\n        console.log(\"There is no user with user name:\", userName);\r\n      }\r\n    });\r\n  }\r\n\r\n  //function getBlogKeyByBlogLink(blogLink) \r\n\r\n  //====================================================\r\n\r\n  const addBlog = (blogData) => {\r\n\r\n    const newBlogKey = push(child(ref(database), \"blogs\")).key;\r\n\r\n    if (newBlogKey) {\r\n      set(ref(database, \"blogs/\" + newBlogKey), {\r\n        ...blogData,\r\n        author: userPublicData.firstName + \" \" + userPublicData.lastName,\r\n        userName: userPublicData.userName,\r\n        userId: user.uid,\r\n      });\r\n    }\r\n  }\r\n\r\n  const deleteBlog = (blogKey) => {\r\n    remove(ref(database, \"blogs/\" +  blogKey)).then(() => {\r\n      console.log(\"blog \" + blogKey + \" was deleted\");\r\n    }).catch((error) => {\r\n      // An error ocurred\r\n      console.log(error.message);\r\n    });\r\n  }\r\n\r\n  const updateBlog = (blogKey, updatedBlogData) => {\r\n    set(ref(database, \"blogs/\" + blogKey), {\r\n      ...updatedBlogData\r\n    });\r\n  };\r\n\r\n  const addArticle = (blogKey, blogTitle, article) => {\r\n\r\n    const newArticleKey = push(child(ref(database), \"blogs/\" + blogKey + \"/articles/\")).key;\r\n\r\n    if (newArticleKey) {\r\n      set(ref(database, \"blogs/\" + blogKey + \"/articles/\" + newArticleKey), {\r\n        ...article,\r\n        author: userPublicData.firstName + \" \" + userPublicData.lastName,\r\n        userName: userPublicData.userName,\r\n        userId: user.uid,\r\n        blogKey: blogKey,\r\n        blogTitle: blogTitle\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateArticle = (blogKey, articleKey, updatedArticleData) => {\r\n    if (updatedArticleData) {\r\n      set(ref(database, \"blogs/\" + blogKey + \"/articles/\" + articleKey), {\r\n        ...updatedArticleData\r\n      });\r\n    } else {\r\n      alert(\"There is no data to update... The article isn't updated.\");\r\n    }\r\n  }\r\n\r\n  const deleteArticle = (blogKey, articleKey) => {\r\n    remove(ref(database, \"blogs/\" +  blogKey + \"/articles/\" + articleKey)).then(() => {\r\n      console.log(\"article \" + articleKey + \" in blog \" + blogKey + \" was deleted\");\r\n    }).catch((error) => {\r\n      console.log(error.message);\r\n    });\r\n  }\r\n\r\n  //==== THIS IS FOR DELETE !!!!!!!!!!!!!!!\r\n  function fetchBlogs() {\r\n    const blogsRef = ref(database, \"blogs\");\r\n    onValue(blogsRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      setBlogs(data);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(firebaseAuth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n        console.log(\"user logged in. user:\", user);\r\n        //setUserPrivateData\r\n        const userPrivateDataRef = ref(database, \"users/\" + user.uid + \"/privateData\");\r\n        onValue(userPrivateDataRef, (snapshot) => {\r\n          const data = snapshot.val();\r\n          console.log(\"user private data:\", data);\r\n          setUserPrivateData(data);\r\n        });\r\n        //setUserPublicData\r\n        const userPublicDataRef = ref(database, \"users/\" + user.uid + \"/publicData/data\");\r\n        onValue(userPublicDataRef, (snapshot) => {\r\n          const data = snapshot.val();\r\n          console.log(\"user public data:\", data);\r\n          setUserPublicData(data);\r\n        });\r\n      } else {\r\n        setUser(null);\r\n        setUserPrivateData(null);\r\n        setUserPublicData(null);\r\n        console.log(\"user is logged out\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    signIn,\r\n    signUp,\r\n    logOut,\r\n    user,\r\n    userPrivateData,\r\n    userPublicData,\r\n    //=== users lists:\r\n    fetchUsersListOrderedByKeys,\r\n    fetchUsersListOrderedByUserName,\r\n    usersListOrderedByKeys,\r\n    usersListOrderedByUserName,\r\n    //=== blogger:\r\n    fetchBloggerPublicData,\r\n    bloggerPublicData,\r\n    fetchBloggerBlogsList,\r\n    bloggerBlogsList,\r\n    getBloggerIdByUserName,\r\n    bloggerId,\r\n    setBloggerId,\r\n    //====== blog:\r\n    blog,\r\n    fetchBlog,\r\n    //===== article:\r\n    article,\r\n    articleKey,\r\n    fetchArticle,\r\n    getArticleKeyByLink,\r\n    //====================\r\n    fetchUserBlogsList,\r\n    userBlogsList,\r\n    updateUserPublicData,\r\n    blogs,\r\n    fetchBlogs,\r\n    deleteBlog,\r\n    addBlog,\r\n    updateBlog,\r\n    addArticle,\r\n    deleteArticle,\r\n    updateArticle,\r\n    deleteUserAccount\r\n  }\r\n\r\n  return (\r\n    <DatabaseContext.Provider value={value} >{children}</DatabaseContext.Provider>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport default function BlogCard({ blog }) {\r\n    return (\r\n        <div className=\"blog-card\">\r\n            <hr />\r\n            <Link to={\"/blogs/\" + blog.blogLink}>\r\n                <h3>{blog.title}</h3>\r\n            </Link>\r\n            <p>\r\n                by\r\n                <Link to={\"bloggers/\" + blog.userName} className=\"ms-2\">\r\n                    {blog.author}\r\n                </Link>\r\n            </p>\r\n            <p>{blog.description}</p>\r\n        </div>\r\n    );\r\n}","import { useEffect } from \"react\";\r\nimport { useDatabase } from \"../../hooks/use-database\";\r\nimport BlogCard from \"../molecules/BlogCard\";\r\n\r\nexport default function Blogs() {\r\n\r\n    const { blogs, fetchBlogs } = useDatabase();\r\n\r\n    // this will be deleted\r\n    // here will be fetching the blogsList object limeted to some num\r\n    useEffect(() => {\r\n        fetchBlogs();\r\n    }, []);\r\n\r\n    if (!blogs) return <p>Downloading blogs or... there is no blogs...</p>;\r\n\r\n    return (\r\n        <div className=\"blogs-page\">\r\n            <div className=\"blogs-list\">\r\n                <h1>Blogs</h1>\r\n                {\r\n                    Object.entries(blogs).map((blog, i) => <BlogCard key={\"blog-card-\" + i} blog={blog[1]} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function TableOfContent({ articles, url }) {\r\n    return (\r\n        <nav className=\"table-of-content\">\r\n            <hr />\r\n            <h5 className=\"text-center\">Table of content</h5>\r\n            <ul>\r\n                {\r\n                    Object.entries(articles).map((article) =>\r\n                        <li key={article[0]}>\r\n                            <Link\r\n                                to={url + \"/\" + article[1].articleLink}\r\n                                className=\"d-block\"\r\n                            >{article[1].title}</Link>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </nav>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function SectionHeader({ item }) {\r\n    return (\r\n        <header className=\"text-center\">\r\n            <h1>{item.title}</h1>\r\n            <p>\r\n                by\r\n                <Link to={\"/bloggers/\" + item.userName} className=\"ms-2\">\r\n                    {item.author}\r\n                </Link>\r\n            </p>\r\n            <p>{item.createdAt && item.createdAt}{item.updatedAt && (item.updatedAt === item.createdAt ? null : \" / \" + item.updatedAt)}</p>\r\n            <p>{item.description}</p>\r\n        </header>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useRouteMatch, useParams } from \"react-router-dom\";\r\nimport { useDatabase } from \"../../hooks/use-database\";\r\nimport TableOfContent from \"../molecules/TableOfContent\";\r\nimport SectionHeader from \"../molecules/SectionHeader\";\r\n\r\nexport default function Blog() {\r\n\r\n    let { url } = useRouteMatch();\r\n    const { blogLink } = useParams();\r\n\r\n    const { blogs, fetchBlogs } = useDatabase();\r\n\r\n    const [blog, setBlog] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     if (blogLink) {\r\n    //         //\r\n    //     }\r\n    // }, [blogLink]);\r\n\r\n    // this will be deleted\r\n    // here will be fetching the blog according to its link:\r\n    // getBlogByLink\r\n    // => fetchBlog(blogLink)\r\n    useEffect(() => {\r\n        fetchBlogs();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (blogs) {\r\n            const fetchedBlogs = Object.entries(blogs);\r\n            const currentBlog = fetchedBlogs.find(blog => blog[1].blogLink === blogLink)[1];\r\n            setBlog(currentBlog);\r\n            console.log(\"blog articles:\", currentBlog.articles);\r\n        } else {\r\n            console.log(\"there are no blogs or blogLink in BlogPage ...\")\r\n        }\r\n    }, [blogs, blogLink]);\r\n\r\n    if (!blog) return <p>Downloading data or there is no data...</p>\r\n\r\n    return (\r\n        <section className=\"blog\">\r\n            <SectionHeader item={blog} />\r\n            {\r\n                blog.articles\r\n                ? <TableOfContent articles={blog.articles} url={url} />\r\n                : <p>There are no articles yet...</p>\r\n            }\r\n        </section>\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\nimport LinkButton from \"../atoms/LinkButton\";\r\n\r\nexport default function Form({ structure, data, onSubmit, text, to, formClassname}) {\r\n\r\n    const [itemArray, setItemArray] = useState();\r\n\r\n    useEffect(() => {\r\n        if (structure) {\r\n            const itemArray = [];\r\n            // transform structure / data object into array:\r\n            Object.keys(structure).map(key => {\r\n                const keyValuePair =\r\n                    data && data[key]               // is item passed ?\r\n                    ? [key, data[key]]              // set item[key] value\r\n                    : [                             // if no item\r\n                        key, structure[key].value   // does structure[key] has value ?\r\n                        ? structure[key].value      // if true, use structure[key] value\r\n                        : \"\"                        // if false, set empty value to the key\r\n                    ]\r\n                ;\r\n                return itemArray.push(keyValuePair);\r\n            });\r\n            if (data) {\r\n                console.log(\"item array created from passed data:\", itemArray);\r\n            } else {\r\n                console.log(\"item array created from structure template:\", itemArray);\r\n            }\r\n            setItemArray([...itemArray]);\r\n        }\r\n    }, [structure, data]);\r\n\r\n    if (!structure || (structure && !itemArray)) return <p>Nothing has been passed to the Form component...</p>;\r\n\r\n    return (\r\n        <form className={formClassname} >\r\n            <div className=\"row mb-3\">\r\n                {\r\n                    Object.keys(structure).map((key, i) => (\r\n                        <div className=\"mb-2\" key={key + \"-input-div\"}>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type={structure[key].type ? structure[key].type : \"text\"}\r\n                                value={itemArray[i] ? itemArray[i][1] : \"\"} // fix this !!!!!!!!!!!\r\n                                placeholder={structure[key].placeholder ? structure[key].placeholder : key}\r\n                                onChange={(e) => {\r\n                                    const updatedItem = [...itemArray];\r\n                                    updatedItem[i] = [...updatedItem[i]];\r\n                                    updatedItem[i][1] = e.target.value;\r\n                                    setItemArray([...updatedItem]);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            <LinkButton\r\n                text={text}\r\n                style=\"success\"\r\n                to={to}\r\n                onClick={() => {\r\n                    // tranform item / data array back to object & pass it:\r\n                    onSubmit(Object.fromEntries(itemArray));\r\n                }}\r\n            />\r\n        </form>\r\n    );\r\n}","// add as much inputs, as you like\r\n// according to template below:\r\n\r\n// some_key_representanting_variable: { // name of the key / variable\r\n//   type: \"password\", // (OPTIONAL) include type only if it's value is not \"text\"\r\n//   value: \"some value\", // (OPTIONAL) if it's empty, skip this key-value pair\r\n//   placeholder: \"some placeholder\" // (OPTIONAL) if it's same as key / variable name, skip it\r\n// }\r\n\r\n// if all properties are defaul & skipped,\r\n// add a key_name: {},\r\n\r\nexport const SIGN_IN = {\r\n    email: {\r\n        type: \"email\"\r\n    },\r\n    password: {\r\n        type: \"password\"\r\n    },\r\n};\r\n\r\nexport const EDIT_USER_DATA = {\r\n    firstName: {\r\n        placeholder: \"input your real first name\"\r\n    },\r\n    lastName: {\r\n        placeholder: \"input your real last name\"\r\n    },\r\n    userName: {\r\n        placeholder: \"input your user name using lower case letters only\"\r\n    }\r\n};\r\n\r\nexport const SIGN_UP = {\r\n    ...EDIT_USER_DATA,\r\n    ...SIGN_IN\r\n};\r\n\r\nexport const CREATE_BLOG = {\r\n    title: {},\r\n    description: {}\r\n}","import { useDatabase } from \"../../../hooks/use-database\";\r\nimport Form from \"../../organisms/Form\";\r\nimport LinkButton from \"../../atoms/LinkButton\";\r\nimport { EDIT_USER_DATA } from \"../../../initial-data/form-structure-templates\";\r\n\r\nexport default function UserDataSection() {\r\n\r\n    const { userPublicData, updateUserPublicData, deleteUserAccount } = useDatabase();\r\n\r\n    function handleSubmit(data) {\r\n        if (\r\n            data.firstName.replace(/\\s/g, '').length &&\r\n            data.lastName.replace(/\\s/g, '').length &&\r\n            data.userName.replace(/\\s/g, '').length\r\n        ) {\r\n            updateUserPublicData(data);\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to update your account data!\");\r\n        }\r\n    }\r\n\r\n    if (!userPublicData) return <p>Downloading your data...</p>\r\n    \r\n    return (\r\n        <div className=\"edit-user-data-section\">\r\n            <Form \r\n                structure={EDIT_USER_DATA}\r\n                data={userPublicData}\r\n                onSubmit={handleSubmit}\r\n                to=\"/dashboard\"\r\n                text=\"save changes\"\r\n                formClassname=\"edit-user-data-form\"\r\n            />\r\n            <LinkButton\r\n                to=\"/dashboard\"\r\n                style=\"danger\"\r\n                text=\"delete my account\"\r\n                onClick={() => {\r\n                    // eslint-disable-next-line no-restricted-globals\r\n                    const wantToDelete = confirm(\"Are you sure, you want to delete your account & your articles forever? There's no turning back... Delete account?\");\r\n                    if (wantToDelete) {\r\n                        alert(\"Sorry, for a moment delete account function is being updating, so it's off... Please, contact to the owner of this app to delete your account manually or wait for the updates.\");\r\n                        //deleteUserAccount();\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}","export default function convertTitleIntoLink(title) {\r\n    return (title.replace(/ /g, \"-\").toLowerCase());\r\n}","import { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDatabase } from \"../../../hooks/use-database\";\r\nimport convertTitleIntoLink from \"../../../functions/convertTitleIntoLink\";\r\n\r\nexport default function BlogEditionSection() {\r\n\r\n    const { blogLink } = useParams();\r\n\r\n    const { blogs, deleteBlog, updateBlog, deleteArticle } = useDatabase();\r\n\r\n    const [blog, setBlog] = useState(null);\r\n    const [blogKey, setBlogKey] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (blogs) {\r\n            const fetchedBlogs = Object.entries(blogs);\r\n            const currentBlogArray = fetchedBlogs.filter(blog => blog[1].blogLink === blogLink); // array...\r\n            const currentBlog = currentBlogArray[0][1];\r\n            const currentBlogKey = currentBlogArray[0][0];\r\n            setBlog(currentBlog);\r\n            setBlogKey(currentBlogKey);\r\n        } else {\r\n            console.log(\"there are no blogs or blogLink in BlogPage ...\")\r\n        }\r\n    }, [blogs, blogLink]);\r\n\r\n    if (!blog && !blogKey) return <p>Downloading blog data...</p>\r\n\r\n    return (\r\n        <div className=\"blog-edition-section row\">\r\n            <div className=\"col-lg\">\r\n                <form>\r\n                    <div className=\"mb-2\">\r\n                        <h4 className=\"text-center\">Blog</h4>\r\n                        <hr />\r\n                        <p>Blog title</p>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            defaultValue={blog.title}\r\n                            onChange={(e) => setBlog({...blog, title: e.target.value, blogLink: convertTitleIntoLink(e.target.value)})}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                        <p>Blog description</p>\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            defaultValue={blog.description}\r\n                            onChange={(e) => setBlog({...blog, description: e.target.value})}\r\n                        />\r\n                    </div>\r\n                    <Link\r\n                        to=\"/dashboard/user-blogs\"\r\n                        type=\"button\"\r\n                        className=\"btn btn-success mb-3 d-block\"\r\n                        style={{width: \"100%\"}}\r\n                        onClick={() => {\r\n                            if (\r\n                                blog.title.replace(/\\s/g, '').length &&\r\n                                blog.description.replace(/\\s/g, '').length\r\n                            ) {\r\n                                updateBlog(blogKey, blog);\r\n                            } else {\r\n                                alert(\"You need to complete all input fields (not only white spaces...) to update your blog data... Try again!\");\r\n                            }\r\n                        }}\r\n                    >\r\n                        Save changes\r\n                    </Link>\r\n                    <Link\r\n                        to=\"/dashboard/user-blogs\"\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-danger mb-3 d-block\"\r\n                        onClick={() => {\r\n                            // eslint-disable-next-line no-restricted-globals\r\n                            const wantToDeleteBlog = confirm(\"Are you sure, you want to delete this blog & all articles from this blog forever? There's no turning back... Delete blog?\");\r\n                            if (wantToDeleteBlog) {\r\n                                deleteBlog(blogKey);\r\n                            }\r\n                        }}\r\n                    >\r\n                        Delete blog\r\n                    </Link>\r\n                </form>\r\n            </div>\r\n            <div className=\"col-lg\">\r\n                <h4 className=\"text-center\">Articles</h4>\r\n                <hr />\r\n                {\r\n                    blog.articles ? (\r\n                        Object.entries(blog.articles).map((article) => (\r\n                            <div key={article[0]}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md\">\r\n                                        <h5>{article[1].title}</h5>\r\n                                    </div>\r\n                                    <div className=\"col-md text-end\">\r\n                                        <Link\r\n                                            to={\"/edit-article/\" + blogKey + \"/\" + article[0]}\r\n                                            className=\"btn btn-secondary d-inline\"\r\n                                        >\r\n                                            <i className=\"bi bi-pencil\" />\r\n                                        </Link>\r\n                                        <Link\r\n                                            to={\"/blogs/\" + blog.blogLink + \"/\" + article[1].articleLink}\r\n                                            className=\"btn btn-secondary d-inline\"\r\n                                        >\r\n                                            <i className=\"bi bi-eye\" />\r\n                                        </Link>\r\n                                        <button\r\n                                            className=\"btn btn-danger d-inline\"\r\n                                            onClick={() => {\r\n                                                // eslint-disable-next-line no-restricted-globals\r\n                                                const wantToDeleteArticle = confirm(\"Are you sure, you want to delete this article from this blog forever? There's no turning back... Delete article?\");\r\n                                                if (wantToDeleteArticle) {\r\n                                                    deleteArticle(blogKey, article[0]);\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                            <i className=\"bi bi-trash\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <div>\r\n                            There are no articles...\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useDatabase } from \"../../../hooks/use-database\";\r\nimport { Link, Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport BlogEditionSection from \"./BlogEditionSection\";\r\nimport LinkButton from \"../../atoms/LinkButton\";\r\n\r\nexport default function UserBlogsSection() {\r\n\r\n    let {path, url} = useRouteMatch();\r\n\r\n    const { userBlogsList, deleteBlog } = useDatabase();\r\n\r\n    return (\r\n        <div className=\"user-blogs-section-in-dashboard\">\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <div>\r\n                        <LinkButton\r\n                            to=\"/create-blog\"\r\n                            style=\"info mb-3\"\r\n                            text=\"create new blog\"\r\n                        />\r\n                        {\r\n                            userBlogsList ?\r\n                                Object.entries(userBlogsList).map((blog) =>\r\n                                    <div key={blog[0]}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <Link\r\n                                                    to={url + \"/\" + blog[1].blogLink}\r\n                                                >\r\n                                                    <h5>{blog[1].title}</h5>\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"col-4 text-end\">\r\n                                                <Link\r\n                                                    to={\"/create-article/\" + blog[0] + \"/\" + blog[1].title}\r\n                                                    className=\"text-info\"\r\n                                                >\r\n                                                    <i className=\"bi bi-plus-square me-2\" />\r\n                                                </Link>\r\n                                                <Link\r\n                                                    className=\"text-primary\"\r\n                                                    to={`/blogs/${blog[1].blogLink}`}\r\n                                                >\r\n                                                    <i className=\"bi bi-eye me-2\" />\r\n                                                </Link>\r\n                                                <Link\r\n                                                    className=\"text-danger\"\r\n                                                    to=\"/dashboard/user-blogs\"\r\n                                                    onClick={() => {\r\n                                                        // eslint-disable-next-line no-restricted-globals\r\n                                                        const wantToDeleteBlog = confirm(\"Are you sure, you want to delete this blog & all articles from this blog forever? There's no turning back... Delete blog?\");\r\n                                                        if (wantToDeleteBlog) {\r\n                                                            deleteBlog(blog[0]);\r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <i className=\"bi bi-trash\" />\r\n                                                </Link>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        <hr />\r\n                                    </div>\r\n                                )\r\n                            :\r\n                                <div>\r\n                                    <h5 className=\"text-center\">There are no blogs yet... Create one!</h5>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </Route>\r\n                <Route path={path + \"/:blogLink\"}>\r\n                    <BlogEditionSection />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import { Link, Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport UserDataSection from \"../page-sections/dashboard/UserDataSection\";\r\nimport UserBlogsSection from \"../page-sections/dashboard/UserBlogsSection\";\r\nimport { useDatabase } from \"../../hooks/use-database\";\r\n\r\nexport default function Dashboard({ userId }) {\r\n\r\n    let {path} = useRouteMatch();\r\n\r\n    const { fetchUserBlogsList } = useDatabase();\r\n\r\n    if (!userId) return <p>You need to be logged to see your dashboard...</p>\r\n    \r\n    return (\r\n        <div className=\"dashboard-page\">\r\n            <nav className=\"dashboard-nav text-center\">\r\n                <Link\r\n                    to={`/dashboard/user-data`}\r\n                    className=\"me-2\"\r\n                >Your profile data</Link>\r\n                <span> | </span>\r\n                <Link\r\n                    to={`/dashboard/user-blogs`}\r\n                    className=\"ms-2\"\r\n                    onClick={() => fetchUserBlogsList(userId)}\r\n                >Your blogs</Link>\r\n            </nav>\r\n            <hr />\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <UserDataSection />\r\n                </Route>\r\n                <Route path={`${path}/user-data`}>\r\n                    <UserDataSection />\r\n                </Route>\r\n                <Route path={`${path}/user-blogs`}>\r\n                    <UserBlogsSection />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function BloggerCard({ bloggerData }) {\r\n\r\n    return (\r\n        <div className=\"blogger-card\">\r\n            <hr />\r\n            <Link\r\n                to={\"bloggers/\" + bloggerData.userName}\r\n                className=\"d-block my-2\"\r\n                style={{textDecoration: \"none\"}}\r\n            >\r\n                <i className=\"bi bi-person-circle me-2\"></i>\r\n                {bloggerData.firstName + \" \" + bloggerData.lastName + \" | @\" + bloggerData.userName}\r\n            </Link>\r\n        </div>\r\n    );\r\n}","import { useEffect } from \"react\";\r\nimport { useDatabase } from \"../../hooks/use-database\";\r\nimport BloggerCard from \"../molecules/BloggerCard\";\r\n\r\nexport default function Bloggers() {\r\n\r\n    const {\r\n        //fetchUsersListOrderedByKeys,\r\n        fetchUsersListOrderedByUserName,\r\n        //usersListOrderedByKeys,\r\n        usersListOrderedByUserName\r\n    } = useDatabase();\r\n\r\n    useEffect(() => {\r\n        if (!usersListOrderedByUserName) {\r\n            fetchUsersListOrderedByUserName();\r\n        }\r\n    }, [usersListOrderedByUserName]);\r\n\r\n    if (!usersListOrderedByUserName) return <p>Downloading bloggers list or... there are no bloggers</p>\r\n\r\n    return (\r\n        <section className=\"bloggers-page\">\r\n            <h1>Bloggers</h1>\r\n            <nav className=\"bloggers-list\">\r\n                {\r\n                    Object.entries(usersListOrderedByUserName).map(blogger =>\r\n                        <BloggerCard \r\n                            key={blogger[0]}\r\n                            bloggerData={{...blogger[1], userName: blogger[0]}}\r\n                        />\r\n                    )}\r\n            </nav>\r\n        </section>\r\n    );\r\n}","import { useDatabase } from \"../../hooks/use-database\";\r\nimport convertTitleIntoLink from \"../../functions/convertTitleIntoLink\";\r\nimport Form from \"../organisms/Form\";\r\nimport { CREATE_BLOG } from \"../../initial-data/form-structure-templates\";\r\n\r\nexport default function CreateBlog() {\r\n\r\n    const { addBlog } = useDatabase();\r\n\r\n    function handleSubmit(blog) {\r\n        if (\r\n            blog.title.replace(/\\s/g, '').length &&\r\n            blog.description.replace(/\\s/g, '').length\r\n        ) {\r\n            const blogLink = convertTitleIntoLink(blog.title);\r\n            const newBlogDataWithLink = {\r\n                ...blog,\r\n                blogLink: blogLink\r\n            }\r\n            addBlog(newBlogDataWithLink);\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to create new blog... Try again!\");\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <div className=\"create-blog-section container\">\r\n            <h1>Create new blog!</h1>\r\n            <hr />\r\n            <Form\r\n                structure={CREATE_BLOG}\r\n                text=\"create blog\"\r\n                to=\"/dashboard/user-blogs\"\r\n                formClassname=\"create-blog-form\"\r\n                //onSubmit={handleSubmit}\r\n                onSubmit={() => alert(\"I'm currently updating the app according to new database structure & security rules, so you can't create a blog at the moment... Sorry, wait a few days!\")}\r\n\r\n            />            \r\n        </div>\r\n    );\r\n}","import ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\n\r\nexport default function MarkdownEditor({ articleData, setArticleData }) {\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"Editor col-lg mt-2 mx-2\" style={{marginBottom: 90}}>\r\n                <p className=\"text-center\">Write your content here using Markdown Syntax (ommit title)</p>\r\n                <hr />\r\n                <textarea\r\n                    defaultValue={articleData.content}\r\n                    onChange={(e) => setArticleData({...articleData, content: e.target.value})}\r\n                    style={{width: \"100%\", height: \"80%\"}}\r\n                />\r\n            </div>\r\n            <div className=\"RenderedView col-lg m-2\">\r\n                <p className=\"text-center\">Here you can see how your article would be looking like</p>\r\n                <hr />\r\n                <div>\r\n                    <h1>{articleData.title}</h1>\r\n                    <ReactMarkdown children={articleData.content} remarkPlugins={[remarkGfm]} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n<button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success my-2\"\r\n                    onClick={() => console.log(contentForEdition)}\r\n                >Save changes</button>\r\n                */\r\n\r\n/*\r\n# Finally I'm used!\r\n\r\nFinally this markdown editor will be used in real-life project - Blogging Platform!\r\n\r\nI've made it separately a few days ago & now I can use this extra feature to let my users:\r\n\r\n- create articles\r\n- edit them\r\n- and format text whatever they like!\r\n*/","import { useState } from \"react\";\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport MarkdownEditor from \"../page-sections/create-article/MarkdownEditor\";\r\nimport { useDatabase } from \"../../hooks/use-database\";\r\nimport convertTitleIntoLink from \"../../functions/convertTitleIntoLink\";\r\n\r\nexport default function CreateArticlePage() {\r\n\r\n    const { blogKey } = useParams();\r\n    const { blogTitle } = useParams();\r\n\r\n    const { addArticle } = useDatabase();\r\n\r\n    const [newArticleData, setNewArticleData] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        content: \"\"\r\n    });\r\n\r\n    function handleSubmit() {\r\n        if (\r\n            newArticleData.title.replace(/\\s/g, '').length &&\r\n            newArticleData.description.replace(/\\s/g, '').length\r\n        ) {\r\n            const articleLink = convertTitleIntoLink(newArticleData.title);\r\n            const date = new Date();\r\n            const day = date.getUTCDate();\r\n            const month = date.getUTCMonth() + 1;\r\n            const year = date.getUTCFullYear();\r\n            const createdAt = year + \".\" + month + \".\" + day;\r\n            const newArticleDataWithLink = {\r\n                ...newArticleData,\r\n                articleLink: articleLink,\r\n                createdAt: createdAt\r\n            }\r\n            addArticle(blogKey, blogTitle, newArticleDataWithLink);\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to create new article... Try again!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-article-page container\">\r\n            <form className=\"create-article-form\">\r\n                <h1>Create new article!</h1>\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg mb-2\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"title\"\r\n                            onChange={(e) => setNewArticleData({...newArticleData, title: e.target.value})}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg mb-2\">\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"description\"\r\n                            onChange={(e) => setNewArticleData({...newArticleData, description: e.target.value})}\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <hr />\r\n            <MarkdownEditor\r\n                articleData={newArticleData}\r\n                setArticleData={setNewArticleData}\r\n            />\r\n            <Link\r\n                to=\"/dashboard/user-blogs\"\r\n                type=\"button\"\r\n                className=\"btn btn-primary mb-3\"\r\n                //onClick={handleSubmit}\r\n                onClick={() => alert(\"I'm currently updating the app according to new database structure & security rules, so you can't create an article at the moment... Sorry, wait a few days!\")}\r\n            >\r\n                Create new article\r\n            </Link>\r\n        </div>\r\n    );\r\n}","export default function FooterLink({ href, text }) {\r\n    return (\r\n        <a\r\n            className=\"footer-link d-inline me-2 ms-2\"\r\n            style={{textDecoration: \"none\"}}\r\n            href={href}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n        >{text}</a>\r\n    );\r\n}","import FooterLink from \"../atoms/FooterLink\";\r\n\r\nconst FOOTER_LINKS = [\r\n    {\r\n        href: \"https://github.com/vadimgierko/blogging-platform\",\r\n        text: \"Blogging Platform\"\r\n    },\r\n    {\r\n        href: \"https://github.com/vadimgierko/markdown-text-editor\",\r\n        text: \"Markdown Editor\"\r\n    },\r\n    {\r\n        href: \"https://github.com/vadimgierko\",\r\n        text: \"Vadim Gierko\"\r\n    },\r\n];\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer text-center text-muted\">\r\n            <hr />\r\n            <FooterLink href={FOOTER_LINKS[0].href} text={FOOTER_LINKS[0].text} />\r\n            &\r\n            <FooterLink href={FOOTER_LINKS[1].href} text={FOOTER_LINKS[1].text} />\r\n            &copy; 2021 - 2022\r\n            <FooterLink href={FOOTER_LINKS[2].href} text={FOOTER_LINKS[2].text} />\r\n        </div>\r\n    );\r\n}","import { useDatabase } from \"../../hooks/use-database\";\r\nimport { useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nexport default function Blogger() {\r\n\r\n    const { userName } = useParams();\r\n\r\n    const {\r\n        bloggerPublicData,\r\n        fetchBloggerPublicData,\r\n        bloggerBlogsList,\r\n        fetchBloggerBlogsList,\r\n        getBloggerIdByUserName,\r\n        bloggerId\r\n    } = useDatabase();\r\n\r\n    useEffect(() => {\r\n        if (userName) {\r\n            getBloggerIdByUserName(userName);\r\n        }\r\n    }, [userName]);\r\n\r\n    useEffect(() => {\r\n        if (bloggerId) {\r\n            fetchBloggerPublicData(bloggerId);\r\n            fetchBloggerBlogsList(bloggerId);\r\n        }\r\n    }, [bloggerId]);\r\n\r\n    if (!bloggerPublicData) return <p>Downloading data or ... there is no blogger of user name: {bloggerPublicData && bloggerPublicData.userName}</p>;\r\n\r\n    return (\r\n        <div className=\"blogger-page\">\r\n            <h1>{bloggerPublicData.firstName + \" \" + bloggerPublicData.lastName}</h1>\r\n            <hr />\r\n            <p>user name: {\"@\" + bloggerPublicData.userName}</p>\r\n            <nav className=\"blogger-blogs\">\r\n                {\r\n                    bloggerBlogsList\r\n                    ? Object.entries(bloggerBlogsList).map((blog) => \r\n                            <Link key={blog[0]} to={\"/blogs/\" + blog[1].blogLink}>\r\n                                <h3>{blog[1].title}</h3>\r\n                            </Link>\r\n                        )\r\n                    : <p>Downloading blogger blogs or there are no blogs...</p>\r\n                }\r\n            </nav>\r\n        </div>\r\n    );\r\n}","import { useEffect } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDatabase } from \"../../hooks/use-database\";\r\nimport SectionHeader from \"../molecules/SectionHeader\";\r\n\r\nexport default function Article() {\r\n\r\n    const { articleLink } = useParams();\r\n    const { blogLink } = useParams();\r\n\r\n    const {\r\n        article,\r\n        articleKey,\r\n        fetchArticle,\r\n        getArticleKeyByLink,\r\n    } = useDatabase();\r\n\r\n    useEffect(() => {\r\n        if (articleLink) {\r\n            getArticleKeyByLink(articleLink);\r\n        }\r\n    }, [articleLink]);\r\n\r\n    useEffect(() => {\r\n        if (articleKey) {\r\n            fetchArticle(articleKey);\r\n        }\r\n    }, [articleKey]);\r\n\r\n    if (!article) return <p>Downloading article or there is no such article...</p>;\r\n\r\n    return (\r\n        <article className=\"article\">\r\n            <SectionHeader item={article.metadata} />\r\n            <hr />\r\n            <ReactMarkdown children={article.content} remarkPlugins={[remarkGfm]} />\r\n        </article>\r\n    );\r\n}","import { useDatabase } from \"../../hooks/use-database\";\r\nimport Form from \"../organisms/Form\";\r\nimport { SIGN_IN } from \"../../initial-data/form-structure-templates\";\r\n\r\nexport default function SignIn() {\r\n\r\n    const { signIn } = useDatabase();\r\n\r\n    function handleSubmit(signInData) {\r\n        if (signInData.email.replace(/\\s/g, '').length) {\r\n            if (signInData.password.replace(/\\s/g, '').length) {\r\n                signIn(signInData);\r\n            } else {\r\n                alert(\"You need to input your password (& not only white spaces...) to log in!\");\r\n            }\r\n        } else {\r\n            alert(\"You need to input your email (& not only white spaces...) to log in!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in-page container\">\r\n            <h1>Sign in!</h1>\r\n            <hr />\r\n            <Form\r\n              formClassname=\"sign-in-form\"\r\n              structure={SIGN_IN}\r\n              onSubmit={handleSubmit}\r\n              to=\"/dashboard\"\r\n              text=\"log in\"\r\n            />\r\n        </div>\r\n    );\r\n}","import { useDatabase } from \"../../hooks/use-database\";\r\nimport Form from \"../organisms/Form\";\r\nimport { SIGN_UP } from \"../../initial-data/form-structure-templates\";\r\n\r\nexport default function SignUp() {\r\n\r\n    const { signUp } = useDatabase();\r\n\r\n    function handleSubmit(signUpData) {\r\n        if (\r\n            signUpData.email.replace(/\\s/g, '').length &&\r\n            signUpData.firstName.replace(/\\s/g, '').length &&\r\n            signUpData.lastName.replace(/\\s/g, '').length &&\r\n            signUpData.password.replace(/\\s/g, '').length &&\r\n            signUpData.userName.replace(/\\s/g, '').length\r\n            ) {\r\n                signUp(signUpData);\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to create an account!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-up-page container\">\r\n            <h1>Create account!</h1>\r\n            <hr />\r\n            <Form\r\n                formClassname=\"sign-up-form\"\r\n                structure={SIGN_UP}\r\n                //onSubmit={handleSubmit}\r\n                onSubmit={() => alert(\"I'm currently updating the app according to new database structure & security rules, so you can't create an account at the moment... Sorry, wait a few days!\")}\r\n                to=\"/dashboard\"\r\n                text=\"sign up\"\r\n            />\r\n        </div>\r\n    );\r\n}","export default function About() {\r\n    return (\r\n        <article className=\"about-page\">\r\n            <h1>What you can do with Blogging Platform</h1>\r\n            <hr />\r\n            <p style={{color: \"red\"}}>NOTE: I'm currently updating the app according to new database structure & security rules, so some of features, like create new account, new article or blog, and delete an account, update article or blog are off for a few days...</p>\r\n            <ul>\r\n                <li>create & run your blog (or many blogs) after creating a free user account</li>\r\n                <li>write & edit your articles with simple & intuitive <a href=\"https://vadimgierko.github.io/markdown-text-editor/\" rel=\"noreferrer\" target=\"_blank\">markdown text editor</a>, which was also created by myself</li>\r\n                <li>read published blogs without authentication</li>\r\n            </ul>\r\n            <p>Blogging Platform is a responsive full-stack single-page application, which supports all kinds of CRUD features, in which I have used all of my previous knowledge and skills in the field of front-end development (React, Bootstrap) and realtime database integration (Firebase).</p>\r\n            <h3>Technologies used in Blogging Platform development</h3>\r\n            <hr />\r\n            <ul>\r\n                <li>React 17</li>\r\n                <li>React Router 5.2 (HashRouter, dynamic & nested routing)</li>\r\n                <li>React Context</li>\r\n                <li>React Markdown 7 & remark-gfm</li>\r\n                <li>Firebase 9.1 (auth, realtime database, security rules)</li>\r\n                <li>Bootstrap 5.1</li>\r\n                <li>Bootswatch 5.1</li>\r\n                <li>GitHub Pages 3.2</li>\r\n                <li>Atomic Web Design</li>\r\n            </ul>\r\n        </article>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport MarkdownEditor from \"../page-sections/create-article/MarkdownEditor\";\r\nimport { useDatabase } from \"../../hooks/use-database\";\r\nimport convertTitleIntoLink from \"../../functions/convertTitleIntoLink\";\r\n\r\nexport default function UpdateArticle() {\r\n\r\n    const { blogKey } = useParams();\r\n    const { articleKey } = useParams();\r\n\r\n    const { blogs, updateArticle } = useDatabase();\r\n\r\n    const [updatedArticleData, setUpdatedArticleData] = useState(null);\r\n\r\n    function handleSubmit() {\r\n        if (\r\n            updatedArticleData.title.replace(/\\s/g, '').length &&\r\n            updatedArticleData.description.replace(/\\s/g, '').length\r\n        ) {\r\n            // update article link in the case if title changed:\r\n            const articleLink = convertTitleIntoLink(updatedArticleData.title);\r\n            // set date of update:\r\n            const date = new Date();\r\n            const day = date.getUTCDate();\r\n            const month = date.getUTCMonth() + 1;\r\n            const year = date.getUTCFullYear();\r\n            const updatedAt = year + \".\" + month + \".\" + day;\r\n            // update updatedData with new link & updateAt date:\r\n            const updatedArticleDataWithLink = {\r\n                ...updatedArticleData,\r\n                articleLink: articleLink,\r\n                updatedAt: updatedAt\r\n            }\r\n            updateArticle(blogKey, articleKey, updatedArticleDataWithLink);\r\n        } else {\r\n            alert(\"You need to complete all input fields (not only white spaces...) to create new article... Try again!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (blogs) {\r\n            const currentBlog = blogs[blogKey];\r\n            console.log(\"currentBlog:\", currentBlog);\r\n            const currentArticle = currentBlog.articles[articleKey];\r\n            console.log(\"currentArticle:\", currentArticle);\r\n            setUpdatedArticleData(currentArticle);\r\n        }\r\n    }, [blogs, blogKey, articleKey]);\r\n\r\n    if (!updatedArticleData) return <p>Downloading article data...</p>\r\n\r\n    return (\r\n        <div className=\"update-article-page container\">\r\n            <form className=\"update-article-form\">\r\n                <h1>Update article!</h1>\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg mb-2\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            defaultValue={updatedArticleData.title}\r\n                            onChange={(e) => setUpdatedArticleData({...updatedArticleData, title: e.target.value})}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg mb-2\">\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            defaultValue={updatedArticleData.description}\r\n                            onChange={(e) => setUpdatedArticleData({...updatedArticleData, description: e.target.value})}\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <hr />\r\n            <MarkdownEditor\r\n                articleData={updatedArticleData}\r\n                setArticleData={setUpdatedArticleData}\r\n            />\r\n            <Link\r\n                to=\"/dashboard/user-blogs\"\r\n                type=\"button\"\r\n                className=\"btn btn-primary mb-3\"\r\n                //onClick={handleSubmit}\r\n                onClick={() => alert(\"I'm currently updating the app according to new database structure & security rules, so you can't update an article at the moment... Sorry, wait a few days!\")}\r\n            >\r\n                Update article\r\n            </Link>   \r\n        </div>\r\n    );\r\n}","import \"./App.css\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./components/organisms/Header\";\r\nimport Blogs from \"./components/pages/Blogs\";\r\nimport Blog from \"./components/pages/Blog\";\r\nimport Dashboard from \"./components/pages/Dashboard\";\r\nimport Bloggers from \"./components/pages/Bloggers\";\r\nimport CreateBlog from \"./components/pages/CreateBlog\";\r\nimport CreateArticle from \"./components/pages/CreateArticle\";\r\nimport Footer from \"./components/organisms/Footer\";\r\nimport Blogger from \"./components/pages/Blogger\";\r\nimport { useDatabase } from \"./hooks/use-database\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Article from \"./components/organisms/Article\";\r\nimport SignIn from \"./components/pages/SignIn\";\r\nimport SignUp from \"./components/pages/SignUp\";\r\nimport About from \"./components/pages/About\";\r\nimport UpdateArticle from \"./components/pages/UpdateArticle\";\r\n\r\nexport default function App() {\r\n\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const { user, userPublicData, logOut } = useDatabase();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setUserId(user.uid);\r\n    } else {\r\n      setUserId(null);\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header \r\n        userFirstName={user && userPublicData ? userPublicData.firstName : null}\r\n        userLastName={user && userPublicData ? userPublicData.lastName : null}\r\n        logOut={logOut} \r\n      />\r\n      <main className=\"container\" style={{ marginTop: 120 }}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <SignIn />\r\n          </Route>\r\n          <Route path=\"/signup\">\r\n            <SignUp />\r\n          </Route>\r\n          <Route path=\"/dashboard\">\r\n            <Dashboard userId={userId} />\r\n          </Route>\r\n          <Route path=\"/blogs/:blogLink/:articleLink\">\r\n            <Article />\r\n          </Route>\r\n          <Route path=\"/blogs/:blogLink\">\r\n            <Blog />\r\n          </Route>\r\n          <Route path=\"/blogs\">\r\n            <Blogs />\r\n          </Route>\r\n          <Route path=\"/bloggers/:userName\">\r\n            <Blogger />\r\n          </Route>\r\n          <Route path=\"/bloggers\">\r\n            <Bloggers />\r\n          </Route>\r\n          <Route path=\"/create-blog\">\r\n            <CreateBlog />\r\n          </Route>\r\n          <Route path=\"/create-article/:blogKey/:blogTitle\">\r\n            <CreateArticle />\r\n          </Route>\r\n          <Route path=\"/edit-article/:blogKey/:articleKey\">\r\n            <UpdateArticle />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"bootswatch/dist/lux/bootstrap.min.css\"\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { DatabaseProvider } from \"./hooks/use-database\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <DatabaseProvider>\r\n        <App />\r\n      </DatabaseProvider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}